{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanyong/Documents/GitHub/user-research-prototype/src/mergepage.js\";\nimport React, { Component } from \"react\";\nimport './mergepage.css';\nimport MergePoster from './mergeposter.js';\nimport PosterSample from './postersamples';\n\nconst ii1 = require('./img/sample1.png');\n\nconst ii2 = require('./img/sample2.png');\n\nconst ii3 = require('./img/sample3.png');\n\nconst ii4 = require('./img/sample4.png');\n\nconst ii5 = require('./img/sample5.png');\n\nconst ii6 = require('./img/sample6.png');\n\nconst ii7 = require('./img/sample7.png');\n\nconst ii8 = require('./img/sample8.png');\n\nconst ii9 = require('./img/sample9.png');\n\nconst ii10 = require('./img/sample10.png');\n\nconst white = require('./img/white.png');\n\nconst svg = React.createElement(\"svg\", {\n  className: \"umbrella\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"32\",\n  height: \"32\",\n  viewBox: \"0 0 32 32\",\n  \"aria-labelledby\": \"title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(\"title\", {\n  id: \"title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \"Umbrella Icon\"), React.createElement(\"path\", {\n  d: \"M27 14h5c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2v0zM27 14c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2v0 14c0 1.112-0.895 2-2 2-1.112 0-2-0.896-2-2.001v-1.494c0-0.291 0.224-0.505 0.5-0.505 0.268 0 0.5 0.226 0.5 0.505v1.505c0 0.547 0.444 0.991 1 0.991 0.552 0 1-0.451 1-0.991v-14.009c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-5.415 6.671-9.825 15-9.995v-1.506c0-0.283 0.224-0.499 0.5-0.499 0.268 0 0.5 0.224 0.5 0.499v1.506c8.329 0.17 15 4.58 15 9.995h-5z\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}));\n\nclass MergePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleXout = () => {\n      this.setState(prevState => ({\n        xout: true\n      }));\n      this.setState(prevState => ({\n        isGreyClicked: false\n      }));\n    };\n\n    this.handleFavorite = () => {\n      this.handleXout();\n    };\n\n    this.dynamicallyRenderRows = () => {\n      return React.createElement(\"div\", {\n        className: \"row3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"square4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"square4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"square4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"square4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"square4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"square4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }));\n    };\n\n    this.dynamicallyRenderPosters = () => {\n      var indents = [];\n\n      for (var i = 0; i < 100; i++) {\n        indents.push(React.createElement(MergePoster, {\n          importedposter: this.state.parray[i % 10],\n          handleSelection: this.handleSelection.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }));\n      }\n\n      return indents;\n    };\n\n    this.state = {\n      leftrightarray: [],\n      parray: [],\n      isGreyClicked: false,\n      xout: false,\n      favorites: []\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleGreyClick = this.handleGreyClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState(prevState => ({\n      parray: [...prevState.parray, ii1, ii2, ii3, ii4, ii5, ii6, ii7, ii8, ii9, ii10]\n    })); //intially set leftrightarray\n\n    this.setState(prevState => ({\n      leftrightarray: [...prevState.leftrightarray, white, white]\n    }));\n  } // when you click a poster, set the local states correctly based on your selection\n  // ie add to the array of posters to be displayed\n\n\n  handleSelection(chosenposter) {\n    this.setState(prevState => ({\n      leftrightarray: [chosenposter, ...prevState.leftrightarray]\n    }));\n  }\n\n  handleCancel() {\n    this.setState({\n      leftrightarray: []\n    });\n  }\n\n  handleGreyClick() {\n    console.log('a grey square was clicked');\n    this.setState(prevState => ({\n      isGreyClicked: true\n    }));\n    this.setState(prevState => ({\n      xout: false\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"lrcontainer2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"leftside2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"buttflexrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button2\",\n      onClick: () => {\n        this.props.history.push('/secondpage');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \" Back \"), React.createElement(\"div\", {\n      className: \"instr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \" Click two - see the transition! \"), React.createElement(\"button\", {\n      className: \"button2\",\n      onClick: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \" Cancel \")), React.createElement(\"div\", {\n      className: \"posterrows\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.dynamicallyRenderPosters()), React.createElement(\"div\", {\n      className: \"history\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"historytitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \" Favorites \"))), React.createElement(\"div\", {\n      className: \"rightside3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"conditionalpopupdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, this.state.isGreyClicked && !this.state.xout && React.createElement(\"div\", {\n      className: \"popup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"cancelbutton\",\n      onClick: this.handleXout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \" X \"), React.createElement(\"img\", {\n      src: ii2,\n      className: \"popupimage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"popuprow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"favoritebutton\",\n      onClick: this.handleFavorite,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \" Add to Favorites \"), \"               \"))), React.createElement(\"div\", {\n      className: \"row3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(PosterSample, {\n      posterselection: this.state.leftrightarray[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"square4\",\n      onClick: this.handleGreyClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"square4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"square4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"square4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"square4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, this.dynamicallyRenderRows(), this.dynamicallyRenderRows(), this.dynamicallyRenderRows()), React.createElement(\"div\", {\n      className: \"row3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"square4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"square4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"square4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"square4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"square4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(PosterSample, {\n      posterselection: this.state.leftrightarray[1],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default MergePage;","map":{"version":3,"sources":["/Users/tiffanyong/Documents/GitHub/user-research-prototype/src/mergepage.js"],"names":["React","Component","MergePoster","PosterSample","ii1","require","ii2","ii3","ii4","ii5","ii6","ii7","ii8","ii9","ii10","white","svg","MergePage","constructor","props","handleXout","setState","prevState","xout","isGreyClicked","handleFavorite","dynamicallyRenderRows","dynamicallyRenderPosters","indents","i","push","state","parray","handleSelection","bind","leftrightarray","favorites","handleCancel","handleGreyClick","componentDidMount","chosenposter","console","log","render","history"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;;AAGA,MAAMC,GAAG,GAAGC,OAAO,CAAC,mBAAD,CAAnB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,mBAAD,CAAnB;;AACA,MAAME,GAAG,GAAGF,OAAO,CAAC,mBAAD,CAAnB;;AACA,MAAMG,GAAG,GAAGH,OAAO,CAAC,mBAAD,CAAnB;;AACA,MAAMI,GAAG,GAAGJ,OAAO,CAAC,mBAAD,CAAnB;;AACA,MAAMK,GAAG,GAAGL,OAAO,CAAC,mBAAD,CAAnB;;AACA,MAAMM,GAAG,GAAGN,OAAO,CAAC,mBAAD,CAAnB;;AACA,MAAMO,GAAG,GAAGP,OAAO,CAAC,mBAAD,CAAnB;;AACA,MAAMQ,GAAG,GAAGR,OAAO,CAAC,mBAAD,CAAnB;;AACA,MAAMS,IAAI,GAAGT,OAAO,CAAC,oBAAD,CAApB;;AACA,MAAMU,KAAK,GAAGV,OAAO,CAAC,iBAAD,CAArB;;AACA,MAAMW,GAAG,GAAQ;AAAK,EAAA,SAAS,EAAC,UAAf;AAA0B,EAAA,KAAK,EAAC,4BAAhC;AAA6D,EAAA,KAAK,EAAC,IAAnE;AAAwE,EAAA,MAAM,EAAC,IAA/E;AAAoF,EAAA,OAAO,EAAC,WAA5F;AAAwG,qBAAgB,OAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAChB;AAAO,EAAA,EAAE,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADgB,EAET;AAAM,EAAA,CAAC,EAAC,qjBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFS,CAAjB;;AAKA,MAAMC,SAAN,SAAwBhB,SAAxB,CAAkC;AAEhCiB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAyDnBC,UAzDmB,GAyDN,MAAO;AACnB,WAAKC,QAAL,CAAcC,SAAS,KAAK;AACzBC,QAAAA,IAAI,EAAE;AADmB,OAAL,CAAvB;AAKC,WAAKF,QAAL,CAAcC,SAAS,KAAK;AAC1BE,QAAAA,aAAa,EAAE;AADW,OAAL,CAAvB;AAGD,KAlEkB;;AAAA,SAoEnBC,cApEmB,GAoEF,MAAM;AACtB,WAAKL,UAAL;AAEA,KAvEkB;;AAAA,SAyEnBM,qBAzEmB,GAyEK,MAAM;AAE7B,aACA;AAAK,QAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,EAGA;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHA,EAIA;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJA,EAKA;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALA,EAMA;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANA,CADA;AAWA,KAtFkB;;AAAA,SAwFnBC,wBAxFmB,GAwFQ,MAAM;AAEhC,UAAIC,OAAO,GAAG,EAAd;;AACA,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,GAAhB,EAAqBA,CAAC,EAAtB,EAA0B;AACzBD,QAAAA,OAAO,CAACE,IAAR,CAAa,oBAAC,WAAD;AAAa,UAAA,cAAc,EAAI,KAAKC,KAAL,CAAWC,MAAX,CAAkBH,CAAC,GAAC,EAApB,CAA/B;AAAwD,UAAA,eAAe,EAAE,KAAKI,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAb;AAEA;;AACD,aAAQN,OAAR;AACA,KAhGkB;;AAGlB,SAAKG,KAAL,GAAa;AACZI,MAAAA,cAAc,EAAE,EADJ;AAEZH,MAAAA,MAAM,EAAE,EAFI;AAGZR,MAAAA,aAAa,EAAE,KAHH;AAIZD,MAAAA,IAAI,EAAE,KAJM;AAKZa,MAAAA,SAAS,EAAE;AALC,KAAb;AAQA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAApB;AACD,SAAKI,eAAL,GAAuB,KAAKA,eAAL,CAAqBJ,IAArB,CAA0B,IAA1B,CAAvB;AACC;;AAEDK,EAAAA,iBAAiB,GAAG;AAElB,SAAKlB,QAAL,CAAcC,SAAS,KAAK;AAC1BU,MAAAA,MAAM,EAAE,CAAC,GAAGV,SAAS,CAACU,MAAd,EAAsB5B,GAAtB,EAA2BE,GAA3B,EAAgCC,GAAhC,EAAqCC,GAArC,EAA0CC,GAA1C,EAA+CC,GAA/C,EAAoDC,GAApD,EAAyDC,GAAzD,EAA8DC,GAA9D,EAAmEC,IAAnE;AADkB,KAAL,CAAvB,EAFkB,CAMtB;;AACI,SAAKO,QAAL,CAAcC,SAAS,KAAK;AAC1Ba,MAAAA,cAAc,EAAE,CAAC,GAAGb,SAAS,CAACa,cAAd,EAA8BpB,KAA9B,EAAoCA,KAApC;AADU,KAAL,CAAvB;AAID,GA5B+B,CA8BlC;AACA;;;AACEkB,EAAAA,eAAe,CAACO,YAAD,EAAe;AAC7B,SAAKnB,QAAL,CAAcC,SAAS,KAAK;AACzBa,MAAAA,cAAc,EAAE,CAACK,YAAD,EAAe,GAAGlB,SAAS,CAACa,cAA5B;AADS,KAAL,CAAvB;AAGA;;AAEDE,EAAAA,YAAY,GAAG;AACd,SAAKhB,QAAL,CAAgB;AACfc,MAAAA,cAAc,EAAE;AADD,KAAhB;AAIA;;AAEDG,EAAAA,eAAe,GAAG;AACjBG,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AAEA,SAAKrB,QAAL,CAAcC,SAAS,KAAK;AACzBE,MAAAA,aAAa,EAAE;AADU,KAAL,CAAvB;AAIA,SAAKH,QAAL,CAAcC,SAAS,KAAK;AACzBC,MAAAA,IAAI,EAAE;AADmB,KAAL,CAAvB;AAKA;;AA2CFoB,EAAAA,MAAM,GAAG;AACR,WAEI;AAAK,MAAA,SAAS,EAAG,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAED;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,MAAI;AAAC,aAAKxB,KAAL,CAAWyB,OAAX,CAAmBd,IAAnB,CAAwB,aAAxB;AAAwC,OAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,EAGC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAHD,EAKC;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,KAAKO,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALD,CAFH,EAUE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,KAAKV,wBAAL,EAFF,CAVF,EAiBC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,CAjBD,CAFC,EA2BD;AAAK,MAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE;AAAK,MAAA,SAAS,EAAG,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKI,KAAL,CAAWP,aAAX,IAA4B,CAAC,KAAKO,KAAL,CAAWR,IAAxC,IAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,OAAO,EAAE,KAAKH,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,EAGC;AAAK,MAAA,GAAG,EAAEd,GAAV;AAAe,MAAA,SAAS,EAAC,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,EAKC;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAmC,MAAA,OAAO,EAAE,KAAKmB,cAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADD,oBALD,CAHP,CAHF,EAiBG;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,YAAD;AAAc,MAAA,eAAe,EAAE,KAAKM,KAAL,CAAWI,cAAX,CAA0B,CAA1B,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC;AAAM,MAAA,SAAS,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAE,KAAKG,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGF;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHE,EAIF;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJE,EAKF;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALE,EAMF;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANE,CAjBH,EA0BG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKZ,qBAAL,EADF,EAEE,KAAKA,qBAAL,EAFF,EAGE,KAAKA,qBAAL,EAHF,CA1BH,EAiCG;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGF;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHE,EAIF;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJE,EAKF;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALE,EAMF,oBAAC,YAAD;AAAc,MAAA,eAAe,EAAE,KAAKK,KAAL,CAAWI,cAAX,CAA0B,CAA1B,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANE,CAjCH,CA3BC,CAFJ;AAiFA;;AAtLgC;;AAyLlC,eAAelB,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport './mergepage.css';\nimport MergePoster from './mergeposter.js'\nimport PosterSample from './postersamples'\n\n\nconst ii1 = require('./img/sample1.png')\nconst ii2 = require('./img/sample2.png')\nconst ii3 = require('./img/sample3.png')\nconst ii4 = require('./img/sample4.png')\nconst ii5 = require('./img/sample5.png')\nconst ii6 = require('./img/sample6.png')\nconst ii7 = require('./img/sample7.png')\nconst ii8 = require('./img/sample8.png')\nconst ii9 = require('./img/sample9.png')\nconst ii10 = require('./img/sample10.png')\nconst white = require('./img/white.png')\nconst svg =      <svg className=\"umbrella\" xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-labelledby=\"title\">\n\t<title id=\"title\">Umbrella Icon</title>\n        <path d=\"M27 14h5c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2v0zM27 14c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2v0 14c0 1.112-0.895 2-2 2-1.112 0-2-0.896-2-2.001v-1.494c0-0.291 0.224-0.505 0.5-0.505 0.268 0 0.5 0.226 0.5 0.505v1.505c0 0.547 0.444 0.991 1 0.991 0.552 0 1-0.451 1-0.991v-14.009c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-5.415 6.671-9.825 15-9.995v-1.506c0-0.283 0.224-0.499 0.5-0.499 0.268 0 0.5 0.224 0.5 0.499v1.506c8.329 0.17 15 4.58 15 9.995h-5z\"/>\n      </svg>\n\nclass MergePage extends Component {\n  \n  constructor(props) {\n  \tsuper(props)\n\n  \tthis.state = {\n  \t\tleftrightarray: [],\n  \t\tparray: [],\n  \t\tisGreyClicked: false,\n  \t\txout: false,\n  \t\tfavorites: []\n  \t}\n\n  \tthis.handleCancel = this.handleCancel.bind(this)\n \tthis.handleGreyClick = this.handleGreyClick.bind(this)\n  }\n\n  componentDidMount() {\n\n    this.setState(prevState => ({\n      parray: [...prevState.parray, ii1, ii2, ii3, ii4, ii5, ii6, ii7, ii8, ii9, ii10],\n    }))\n\n//intially set leftrightarray\n    this.setState(prevState => ({\n      leftrightarray: [...prevState.leftrightarray, white,white],\n    }))\n\n  }\n\n// when you click a poster, set the local states correctly based on your selection\n// ie add to the array of posters to be displayed\n  handleSelection(chosenposter) {\n  \tthis.setState(prevState => ({\n      leftrightarray: [chosenposter, ...prevState.leftrightarray],\n    }))\n  }\n\n  handleCancel() {\n  \tthis.setState ( { \n  \t\tleftrightarray: []\n  \t\t})\n  \t\n  }\n\n  handleGreyClick() {\n  \tconsole.log('a grey square was clicked')\n\n  \tthis.setState(prevState => ({\n      isGreyClicked: true\n    }))\n\n  \tthis.setState(prevState => ({\n      xout: false\n    }))\n\n\n  }\n\n  handleXout = () =>  {\n  \tthis.setState(prevState => ({\n      xout: true\n    }))\n\n\n    this.setState(prevState => ({\n      isGreyClicked: false\n    }))\n  }\n\n  handleFavorite = () => {\n  \tthis.handleXout()\n\n  }\n\n  dynamicallyRenderRows = () => {\n\n  \treturn (\n\t\t <div className = 'row3'>\n\t\t\t<span className=\"square4\"></span>\n\t\t\t<span className=\"square4\"></span>\n\t\t\t<span className=\"square4\"></span>\n\t\t\t<span className=\"square4\"></span>\n\t\t\t<span className=\"square4\"></span>\n\t\t\t<span className=\"square4\"></span>\n\t\t</div>\n  \t)\n\n  }\n\n  dynamicallyRenderPosters = () => {\n  \t\n  \tvar indents = []\n  \tfor (var i=0; i<100; i++) {\n  \t\tindents.push(<MergePoster importedposter = {this.state.parray[i%10]} handleSelection={this.handleSelection.bind(this)}  />\n\t\t)\n  \t}\n  \treturn (indents)\n  }\n\n\trender() {\n\t\treturn(\n\n      <div className = 'lrcontainer2'>\n\n\t    <div className = 'leftside2'>\n\t      \t\n\t      \t<div className='buttflexrow'>\n\t\t      \t<button className='button2' onClick={()=>{this.props.history.push('/secondpage');}} > Back </button>\n\t\t      \t\n\t\t      \t<div className='instr'> Click two - see the transition! </div>\n\n\t\t      \t<button className='button2' onClick={this.handleCancel}> Cancel </button>\n\t      \t</div>\n\n\t      <div className='posterrows'>\t\n\n\t      \t{this.dynamicallyRenderPosters()}\n\t      \n\n\t      </div>\n\n\t\t    <div className='history'>\n\t\t    \t<div className='historytitle' > Favorites </div>\n\t\n\t\t    </div>\n\n\t    </div>\n\n\n\t    <div className = 'rightside3'>\n\n\n\t      <div className = 'conditionalpopupdiv'>\n\t          {this.state.isGreyClicked && !this.state.xout && \n\n\t\t            <div className='popup'> \n\t\t            \t<button className='cancelbutton' onClick={this.handleXout}> X </button>\n\t\t            \t\n\t\t            \t<img src={ii2} className='popupimage'/>  \n\t\t            \t\n\t\t            \t<div className='popuprow'>\n\t\t\t            \t<button className='favoritebutton' onClick={this.handleFavorite}> Add to Favorites </button>\t\t            \t</div> \n\t\t            </div>\n\t          }\n          </div>\n\n\t      \t<div className = 'row3'>\n\t      \t\t<PosterSample posterselection={this.state.leftrightarray[0]} />\n\t      \t\t<span className=\"square4\" onClick={this.handleGreyClick}></span>\n\t  \t\t\t<span className=\"square4\"></span>\n\t  \t\t\t<span className=\"square4\"></span>\n\t  \t\t\t<span className=\"square4\"></span>\n\t  \t\t\t<span className=\"square4\"></span>\n\t      \t</div>\n\n\t      \t<div> \n\t      \t\t{this.dynamicallyRenderRows()}\n\t      \t\t{this.dynamicallyRenderRows()}\n\t      \t\t{this.dynamicallyRenderRows()}\n\t      \t</div>\n\n\n      \t\t<div className = 'row3'>\n\t      \t\t<span className=\"square4\"></span>\n\t      \t\t<span className=\"square4\"></span>\n\t  \t\t\t<span className=\"square4\"></span>\n\t  \t\t\t<span className=\"square4\"></span>\n\t  \t\t\t<span className=\"square4\"></span>\n\t  \t\t\t<PosterSample posterselection={this.state.leftrightarray[1]} />\n\t     \t</div>\n\n\t      \t\t\n\n\t\t    \n\t      </div>\n\n      </div>\n\n\n\n\t\t);\n\t}\n}\n\nexport default MergePage;"]},"metadata":{},"sourceType":"module"}