{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanyong/Documents/GitHub/user-research-prototype/src/mergepage.js\";\nimport React, { Component } from \"react\";\nimport './mergepage.css';\nimport MergePoster from './mergeposter.js';\nimport PosterSample from './postersamples';\n\nconst ii1 = require('./img/sample1.png');\n\nconst ii2 = require('./img/sample2.png');\n\nconst ii3 = require('./img/sample3.png');\n\nconst ii4 = require('./img/sample4.png');\n\nconst ii5 = require('./img/sample5.png');\n\nconst ii6 = require('./img/sample6.png');\n\nconst ii7 = require('./img/sample7.png');\n\nconst ii8 = require('./img/sample8.png');\n\nconst ii9 = require('./img/sample9.png');\n\nconst ii10 = require('./img/sample10.png');\n\nconst white = require('./img/white.png');\n\nclass MergePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleXout = () => {\n      this.setState(prevState => ({\n        xout: true\n      }));\n      this.setState(prevState => ({\n        isGreyClicked: false\n      }));\n    };\n\n    this.handleFavorite = () => {\n      this.handleXout();\n    };\n\n    this.dynamicallyRenderRows = () => {\n      return React.createElement(\"div\", {\n        className: \"row3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"square4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"square4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"square4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"square4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"square4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"square4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }));\n    };\n\n    this.dynamicallyRenderPosters = () => {\n      var poster_row_html = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(MergePoster, {\n        importedposter: this.state.parray[0],\n        handleSelection: this.handleSelection.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(MergePoster, {\n        importedposter: this.state.parray[1],\n        handleSelection: this.handleSelection.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(MergePoster, {\n        importedposter: this.state.parray[2],\n        handleSelection: this.handleSelection.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(MergePoster, {\n        importedposter: this.state.parray[3],\n        handleSelection: this.handleSelection.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }));\n      poster_row_html += React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(MergePoster, {\n        importedposter: this.state.parray[0],\n        handleSelection: this.handleSelection.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(MergePoster, {\n        importedposter: this.state.parray[1],\n        handleSelection: this.handleSelection.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(MergePoster, {\n        importedposter: this.state.parray[2],\n        handleSelection: this.handleSelection.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(MergePoster, {\n        importedposter: this.state.parray[3],\n        handleSelection: this.handleSelection.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }));\n      return poster_row_html;\n    };\n\n    this.state = {\n      leftrightarray: [],\n      parray: [],\n      isGreyClicked: false,\n      xout: false,\n      favorites: []\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleGreyClick = this.handleGreyClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState(prevState => ({\n      parray: [...prevState.parray, ii1, ii2, ii3, ii4, ii5, ii6, ii7, ii8, ii9, ii10]\n    })); //intially set leftrightarray\n\n    this.setState(prevState => ({\n      leftrightarray: [...prevState.leftrightarray, white, white]\n    }));\n  } // when you click a poster, set the local states correctly based on your selection\n  // ie add to the array of posters to be displayed\n\n\n  handleSelection(chosenposter) {\n    this.setState(prevState => ({\n      leftrightarray: [chosenposter, ...prevState.leftrightarray]\n    }));\n  }\n\n  handleCancel() {\n    this.setState({\n      leftrightarray: []\n    });\n  }\n\n  handleGreyClick() {\n    console.log('a grey square was clicked');\n    this.setState(prevState => ({\n      isGreyClicked: true\n    }));\n    this.setState(prevState => ({\n      xout: false\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"lrcontainer2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"leftside2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"buttflexrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button2\",\n      onClick: () => {\n        this.props.history.push('/secondpage');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \" Back \"), React.createElement(\"div\", {\n      className: \"instr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \" Click two - see the transition! \"), React.createElement(\"button\", {\n      className: \"button2\",\n      onClick: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \" Cancel \")), React.createElement(\"div\", {\n      className: \"posterrows\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, this.dynamicallyRenderPosters(), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(MergePoster, {\n      importedposter: this.state.parray[0],\n      handleSelection: this.handleSelection.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(MergePoster, {\n      importedposter: this.state.parray[1],\n      handleSelection: this.handleSelection.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(MergePoster, {\n      importedposter: this.state.parray[2],\n      handleSelection: this.handleSelection.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(MergePoster, {\n      importedposter: this.state.parray[3],\n      handleSelection: this.handleSelection.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"history\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"historytitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \" Favorites \"))), React.createElement(\"div\", {\n      className: \"rightside3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"conditionalpopupdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, this.state.isGreyClicked && !this.state.xout && React.createElement(\"div\", {\n      className: \"popup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"cancelbutton\",\n      onClick: this.handleXout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \" X \"), React.createElement(\"img\", {\n      src: ii2,\n      className: \"popupimage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"popuprow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"favoritebutton\",\n      onClick: this.handleFavorite,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \" Add to Favorites \"), \"               \"))), React.createElement(\"div\", {\n      className: \"row3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(PosterSample, {\n      posterselection: this.state.leftrightarray[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"square4\",\n      onClick: this.handleGreyClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"square4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"square4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"square4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"square4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, this.dynamicallyRenderRows(), this.dynamicallyRenderRows(), this.dynamicallyRenderRows()), React.createElement(\"div\", {\n      className: \"row3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"square4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"square4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"square4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"square4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"square4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(PosterSample, {\n      posterselection: this.state.leftrightarray[1],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default MergePage;","map":{"version":3,"sources":["/Users/tiffanyong/Documents/GitHub/user-research-prototype/src/mergepage.js"],"names":["React","Component","MergePoster","PosterSample","ii1","require","ii2","ii3","ii4","ii5","ii6","ii7","ii8","ii9","ii10","white","MergePage","constructor","props","handleXout","setState","prevState","xout","isGreyClicked","handleFavorite","dynamicallyRenderRows","dynamicallyRenderPosters","poster_row_html","state","parray","handleSelection","bind","leftrightarray","favorites","handleCancel","handleGreyClick","componentDidMount","chosenposter","console","log","render","history","push"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport './mergepage.css';\nimport MergePoster from './mergeposter.js'\nimport PosterSample from './postersamples'\n\n\nconst ii1 = require('./img/sample1.png')\nconst ii2 = require('./img/sample2.png')\nconst ii3 = require('./img/sample3.png')\nconst ii4 = require('./img/sample4.png')\nconst ii5 = require('./img/sample5.png')\nconst ii6 = require('./img/sample6.png')\nconst ii7 = require('./img/sample7.png')\nconst ii8 = require('./img/sample8.png')\nconst ii9 = require('./img/sample9.png')\nconst ii10 = require('./img/sample10.png')\nconst white = require('./img/white.png')\n\n\nclass MergePage extends Component {\n  \n  constructor(props) {\n  \tsuper(props)\n\n  \tthis.state = {\n  \t\tleftrightarray: [],\n  \t\tparray: [],\n  \t\tisGreyClicked: false,\n  \t\txout: false,\n  \t\tfavorites: []\n  \t}\n\n  \tthis.handleCancel = this.handleCancel.bind(this)\n \tthis.handleGreyClick = this.handleGreyClick.bind(this)\n  }\n\n  componentDidMount() {\n\n    this.setState(prevState => ({\n      parray: [...prevState.parray, ii1, ii2, ii3, ii4, ii5, ii6, ii7, ii8, ii9, ii10],\n    }))\n\n//intially set leftrightarray\n    this.setState(prevState => ({\n      leftrightarray: [...prevState.leftrightarray, white,white],\n    }))\n\n  }\n\n// when you click a poster, set the local states correctly based on your selection\n// ie add to the array of posters to be displayed\n  handleSelection(chosenposter) {\n  \tthis.setState(prevState => ({\n      leftrightarray: [chosenposter, ...prevState.leftrightarray],\n    }))\n  }\n\n  handleCancel() {\n  \tthis.setState ( { \n  \t\tleftrightarray: []\n  \t\t})\n  \t\n  }\n\n  handleGreyClick() {\n  \tconsole.log('a grey square was clicked')\n\n  \tthis.setState(prevState => ({\n      isGreyClicked: true\n    }))\n\n  \tthis.setState(prevState => ({\n      xout: false\n    }))\n\n\n  }\n\n  handleXout = () =>  {\n  \tthis.setState(prevState => ({\n      xout: true\n    }))\n\n\n    this.setState(prevState => ({\n      isGreyClicked: false\n    }))\n  }\n\n  handleFavorite = () => {\n  \tthis.handleXout()\n\n  }\n\n  dynamicallyRenderRows = () => {\n\n  \treturn (\n\t\t <div className = 'row3'>\n\t\t\t<span className=\"square4\"></span>\n\t\t\t<span className=\"square4\"></span>\n\t\t\t<span className=\"square4\"></span>\n\t\t\t<span className=\"square4\"></span>\n\t\t\t<span className=\"square4\"></span>\n\t\t\t<span className=\"square4\"></span>\n\t\t</div>\n  \t)\n\n  }\n\n  dynamicallyRenderPosters = () => {\n  \t\n\n\n\n\n  \tvar poster_row_html =   \t\n  \t<div>\n\t    <MergePoster importedposter = {this.state.parray[0]} handleSelection={this.handleSelection.bind(this)}  />\n\t\t<MergePoster importedposter = {this.state.parray[1]} handleSelection={this.handleSelection.bind(this)}  />\n\t\t<MergePoster importedposter = {this.state.parray[2]} handleSelection={this.handleSelection.bind(this)}  />\n\t\t<MergePoster importedposter = {this.state.parray[3]} handleSelection={this.handleSelection.bind(this)}  />\n  \t</div>\n\n  \tposter_row_html += \n  \t  \t<div>\n\t    <MergePoster importedposter = {this.state.parray[0]} handleSelection={this.handleSelection.bind(this)}  />\n\t\t<MergePoster importedposter = {this.state.parray[1]} handleSelection={this.handleSelection.bind(this)}  />\n\t\t<MergePoster importedposter = {this.state.parray[2]} handleSelection={this.handleSelection.bind(this)}  />\n\t\t<MergePoster importedposter = {this.state.parray[3]} handleSelection={this.handleSelection.bind(this)}  />\n  \t</div>\n\n  \treturn (poster_row_html)\n  }\n\n\trender() {\n\t\treturn(\n\n      <div className = 'lrcontainer2'>\n\n\t    <div className = 'leftside2'>\n\t      \t\n\t      \t<div className='buttflexrow'>\n\t\t      \t<button className='button2' onClick={()=>{this.props.history.push('/secondpage');}} > Back </button>\n\t\t      \t\n\t\t      \t<div className='instr'> Click two - see the transition! </div>\n\n\t\t      \t<button className='button2' onClick={this.handleCancel}> Cancel </button>\n\t      \t</div>\n\n\t      <div className='posterrows'>\t\n\n\t      \t{this.dynamicallyRenderPosters()}\n\t      \t\n\t      \t<div className = 'row'>\n\t      \t\t<MergePoster importedposter = {this.state.parray[0]} handleSelection={this.handleSelection.bind(this)}  />\n\t      \t\t<MergePoster importedposter = {this.state.parray[1]} handleSelection={this.handleSelection.bind(this)}  />\n\t      \t\t<MergePoster importedposter = {this.state.parray[2]} handleSelection={this.handleSelection.bind(this)}  />\n\t      \t\t<MergePoster importedposter = {this.state.parray[3]} handleSelection={this.handleSelection.bind(this)}  />\n\t      \t</div>\n\n\n\n\n\t      </div>\n\n\t\t    <div className='history'>\n\t\t    \t<div className='historytitle' > Favorites </div>\n\t\n\t\t    </div>\n\n\t    </div>\n\n\n\t    <div className = 'rightside3'>\n\n\n\t      <div className = 'conditionalpopupdiv'>\n\t          {this.state.isGreyClicked && !this.state.xout && \n\n\t\t            <div className='popup'> \n\t\t            \t<button className='cancelbutton' onClick={this.handleXout}> X </button>\n\t\t            \t\n\t\t            \t<img src={ii2} className='popupimage'/>  \n\t\t            \t\n\t\t            \t<div className='popuprow'>\n\t\t\t            \t<button className='favoritebutton' onClick={this.handleFavorite}> Add to Favorites </button>\t\t            \t</div> \n\t\t            </div>\n\t          }\n          </div>\n\n\t      \t<div className = 'row3'>\n\t      \t\t<PosterSample posterselection={this.state.leftrightarray[0]} />\n\t      \t\t<span className=\"square4\" onClick={this.handleGreyClick}></span>\n\t  \t\t\t<span className=\"square4\"></span>\n\t  \t\t\t<span className=\"square4\"></span>\n\t  \t\t\t<span className=\"square4\"></span>\n\t  \t\t\t<span className=\"square4\"></span>\n\t      \t</div>\n\n\t      \t<div> \n\t      \t\t{this.dynamicallyRenderRows()}\n\t      \t\t{this.dynamicallyRenderRows()}\n\t      \t\t{this.dynamicallyRenderRows()}\n\t      \t</div>\n\n\n      \t\t<div className = 'row3'>\n\t      \t\t<span className=\"square4\"></span>\n\t      \t\t<span className=\"square4\"></span>\n\t  \t\t\t<span className=\"square4\"></span>\n\t  \t\t\t<span className=\"square4\"></span>\n\t  \t\t\t<span className=\"square4\"></span>\n\t  \t\t\t<PosterSample posterselection={this.state.leftrightarray[1]} />\n\t     \t</div>\n\n\t      \t\t\n\n\t\t    \n\t      </div>\n\n      </div>\n\n\n\n\t\t);\n\t}\n}\n\nexport default MergePage;"]},"metadata":{},"sourceType":"module"}