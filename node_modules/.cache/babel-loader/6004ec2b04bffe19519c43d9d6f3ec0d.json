{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar React = require('react');\n\nvar PropTypes = require('prop-types');\n\nvar loading_style = {\n  position: 'relative',\n  margin: '0px auto',\n  width: '40px',\n  height: '40px'\n};\nvar svg_style = {\n  animation: 'rotate 2s linear infinite',\n  height: '100%',\n  transformOrigin: 'center center',\n  width: '100%',\n  position: 'absolute',\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0,\n  margin: 'auto'\n};\nvar circle_style = {\n  strokeDasharray: '1,200',\n  strokeDashoffset: '0',\n  animation: 'dash 1.5s ease-in-out infinite, color 6s ease-in-out infinite',\n  strokeLinecap: 'round'\n};\nvar animation = '@keyframes rotate {\\n    100% {\\n        transform: rotate(360deg);\\n    }\\n}\\n@keyframes dash {\\n    0% {\\n        stroke-dasharray: 1,200;\\n        stroke-dashoffset: 0;\\n    }\\n    50% {\\n        stroke-dasharray: 89,200;\\n        stroke-dashoffset: -35px;\\n    }\\n    100% {\\n        stroke-dasharray: 89,200;\\n        stroke-dashoffset: -124px;\\n    }\\n}\\n@keyframes color {\\n    100%, 0% {\\n        stroke: #d62d20;\\n    }\\n    40% {\\n        stroke: #0057e7;\\n    }\\n    66% {\\n        stroke: #008744;\\n    }\\n    80%, 90% {\\n        stroke: #ffa700;\\n    }\\n}';\n\nvar Loading = function (_React$Component) {\n  _inherits(Loading, _React$Component);\n\n  function Loading() {\n    _classCallCheck(this, Loading);\n\n    return _possibleConstructorReturn(this, (Loading.__proto__ || Object.getPrototypeOf(Loading)).apply(this, arguments));\n  }\n\n  _createClass(Loading, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          component = _props.component,\n          className = _props.className,\n          isLoading = _props.isLoading,\n          children = _props.children;\n\n      if (isLoading) {\n        var _props2 = this.props,\n            width = _props2.width,\n            height = _props2.height,\n            margin = _props2.margin,\n            style = _props2.style,\n            strokeWidth = _props2.strokeWidth;\n        loading_style.width = width;\n        loading_style.height = height;\n        loading_style.margin = margin;\n        return React.createElement(component, {\n          style: Object.assign({}, loading_style, style)\n        }, React.createElement('style', null, animation), React.createElement('svg', {\n          style: svg_style,\n          viewBox: '25 25 50 50'\n        }, React.createElement('circle', {\n          style: circle_style,\n          cx: '50',\n          cy: '50',\n          r: '20',\n          fill: 'none',\n          strokeWidth: strokeWidth,\n          strokeMiterlimit: '10'\n        })));\n      } else {\n        return React.createElement(component, {\n          className: className\n        }, children || null);\n      }\n    }\n  }]);\n\n  return Loading;\n}(React.Component);\n\nLoading.propTypes = {\n  className: PropTypes.string,\n  isLoading: PropTypes.bool,\n  style: PropTypes.object,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  margin: PropTypes.string,\n  component: PropTypes.any\n};\nLoading.defaultProps = {\n  className: '',\n  isLoading: true,\n  style: {},\n  width: '40px',\n  height: '40px',\n  margin: '0 auto',\n  component: 'div',\n  strokeWidth: '7'\n};\nmodule.exports = Loading; // Polyfills\n\nif (typeof Object.assign != 'function') {\n  Object.assign = function (target, varArgs) {\n    // .length of function is 2\n    'use strict';\n\n    if (target == null) {\n      // TypeError if undefined or null\n      throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    var to = Object(target);\n\n    for (var index = 1; index < arguments.length; index++) {\n      var nextSource = arguments[index];\n\n      if (nextSource != null) {\n        // Skip over if undefined or null\n        for (var nextKey in nextSource) {\n          // Avoid bugs when hasOwnProperty is shadowed\n          if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n\n    return to;\n  };\n}","map":null,"metadata":{},"sourceType":"script"}