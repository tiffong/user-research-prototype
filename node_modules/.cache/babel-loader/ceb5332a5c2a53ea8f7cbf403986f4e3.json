{"ast":null,"code":"import * as SVG from 'svg.js';\nimport $ from 'jquery';\n\nfunction csv2array(data, delimeter) {\n  // Retrieve the delimeter\n  if (delimeter == undefined) delimeter = ',';\n  if (delimeter && delimeter.length > 1) delimeter = ','; // initialize variables\n\n  var newline = '\\n';\n  var eof = '';\n  var i = 0;\n  var c = data.charAt(i);\n  var row = 0;\n  var col = 0;\n  var array = new Array();\n\n  while (c != eof) {\n    // skip whitespaces\n    while (c == ' ' || c == '\\t' || c == '\\r') {\n      c = data.charAt(++i); // read next char\n    } // get value\n\n\n    var value = \"\";\n\n    if (c == '\\\"') {\n      // value enclosed by double-quotes\n      c = data.charAt(++i);\n\n      do {\n        if (c != '\\\"') {\n          // read a regular character and go to the next character\n          value += c;\n          c = data.charAt(++i);\n        }\n\n        if (c == '\\\"') {\n          // check for escaped double-quote\n          var cnext = data.charAt(i + 1);\n\n          if (cnext == '\\\"') {\n            // this is an escaped double-quote.\n            // Add a double-quote to the value, and move two characters ahead.\n            value += '\\\"';\n            i += 2;\n            c = data.charAt(i);\n          }\n        }\n      } while (c != eof && c != '\\\"');\n\n      if (c == eof) {\n        throw \"Unexpected end of data, double-quote expected\";\n      }\n\n      c = data.charAt(++i);\n    } else {\n      // value without quotes\n      while (c != eof && c != delimeter && c != newline && c != ' ' && c != '\\t' && c != '\\r') {\n        value += c;\n        c = data.charAt(++i);\n      }\n    } // add the value to the array\n\n\n    if (array.length <= row) array.push(new Array());\n    array[row].push(value); // skip whitespaces\n\n    while (c == ' ' || c == '\\t' || c == '\\r') {\n      c = data.charAt(++i);\n    } // go to the next row or column\n\n\n    if (c == delimeter) {\n      // to the next column\n      col++;\n    } else if (c == newline) {\n      // to the next row\n      col = 0;\n      row++;\n    } else if (c != eof) {\n      // unexpected character\n      throw \"Delimiter expected after character \" + i;\n    } // go to the next character\n\n\n    c = data.charAt(++i);\n  }\n\n  return array;\n}\n\nfunction createRGBfromHSV(h, s, v) {\n  var r, g, b, i, f, p, q, t;\n\n  if (arguments.length === 1) {\n    s = h.s, v = h.v, h = h.h;\n  }\n\n  i = Math.floor(h * 6);\n  f = h * 6 - i;\n  p = v * (1 - s);\n  q = v * (1 - f * s);\n  t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v, g = t, b = p;\n      break;\n\n    case 1:\n      r = q, g = v, b = p;\n      break;\n\n    case 2:\n      r = p, g = v, b = t;\n      break;\n\n    case 3:\n      r = p, g = q, b = v;\n      break;\n\n    case 4:\n      r = t, g = p, b = v;\n      break;\n\n    case 5:\n      r = v, g = p, b = q;\n      break;\n  }\n\n  return {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255)\n  };\n}\n\nfunction getNumberInNormalDistribution(std_dev) {\n  var offset = randomNormalDistribution() * std_dev;\n  return offset;\n}\n\nfunction randomNormalDistribution() {\n  var u = 0.0,\n      v = 0.0,\n      w = 0.0,\n      c = 0.0;\n\n  do {\n    u = Math.random() * 2 - 1.0;\n    v = Math.random() * 2 - 1.0;\n    w = u * u + v * v;\n  } while (w == 0.0 || w >= 1.0);\n\n  c = Math.sqrt(-2 * Math.log(w) / w);\n  return u * c;\n}\n\nfunction rgb2hsv(r, g, b) {\n  var computedH = 0;\n  var computedS = 0;\n  var computedV = 0; //remove spaces from input RGB values, convert to int\n\n  var r = parseInt(('' + r).replace(/\\s/g, ''), 10);\n  var g = parseInt(('' + g).replace(/\\s/g, ''), 10);\n  var b = parseInt(('' + b).replace(/\\s/g, ''), 10);\n\n  if (r == null || g == null || b == null || isNaN(r) || isNaN(g) || isNaN(b)) {\n    alert('Please enter numeric RGB values!');\n    return;\n  }\n\n  if (r < 0 || g < 0 || b < 0 || r > 255 || g > 255 || b > 255) {\n    alert('RGB values must be in the range 0 to 255.');\n    return;\n  }\n\n  r = r / 255;\n  g = g / 255;\n  b = b / 255;\n  var minRGB = Math.min(r, Math.min(g, b));\n  var maxRGB = Math.max(r, Math.max(g, b)); // Black-gray-white\n\n  if (minRGB == maxRGB) {\n    computedV = minRGB;\n    return [0, 0, computedV];\n  } // Colors other than black-gray-white:\n\n\n  var d = r == minRGB ? g - b : b == minRGB ? r - g : b - r;\n  var h = r == minRGB ? 3 : b == minRGB ? 1 : 5;\n  computedH = 60 * (h - d / (maxRGB - minRGB));\n  computedS = (maxRGB - minRGB) / maxRGB;\n  computedV = maxRGB;\n  return [computedH, computedS, computedV];\n}\n\nfunction generateColor(colors, number, std_dev) {\n  var numberOfColor = colors.length;\n  var colorList = [];\n\n  for (var n = 0; n < colors.length; n++) {\n    var hList = [],\n        sList = [],\n        vList = [];\n    var k = number;\n\n    for (k; k > 0; k--) {\n      var offset = getNumberInNormalDistribution(std_dev);\n      var new_h = colors[n][0] + offset;\n      var new_s = colors[n][1] + offset;\n      var new_v = colors[n][2] + offset;\n\n      if (new_h < 0) {\n        new_h = 360 + new_h;\n      } else if (new_h > 360) {\n        new_h = new_h - 360;\n      }\n\n      if (new_s < 0) {\n        new_s = new_s * -1;\n      } else if (new_s > 100) {\n        new_s = 200 - new_s;\n      }\n\n      if (new_v < 0) {\n        new_v = new_v * -1;\n      } else if (new_v > 100) {\n        new_v = 200 - new_v;\n      }\n\n      hList.push(new_h);\n      sList.push(new_s);\n      vList.push(new_v);\n    }\n\n    colorList.push([hList, sList, vList]);\n  }\n\n  var rgbList = [];\n\n  for (hIndex in colorList[0][0]) {\n    for (sIndex in colorList[0][1]) {\n      for (vIndex in colorList[0][2]) {\n        var RGBs = [];\n\n        for (var n = 0; n < numberOfColor; n++) {\n          RGBs.push(createRGBfromHSV(colorList[n][0][hIndex] / 360, colorList[n][1][sIndex] / 100, colorList[n][2][vIndex] / 100));\n        }\n\n        rgbList.push(RGBs);\n      }\n    }\n  }\n\n  return rgbList;\n}\n\nvar posterIndex = 0;\nvar backgroundPalette = [],\n    elementPalettePure = [];\nelementPaletteGrad = []; //face_color/nose,ear_color/neck_color\n\nvar skinPalette = [[{\n  r: 252,\n  g: 234,\n  b: 202\n}, {\n  r: 240,\n  g: 216,\n  b: 182\n}, {\n  r: 230,\n  g: 203,\n  b: 159\n}], [{\n  r: 245,\n  g: 219,\n  b: 174\n}, {\n  r: 232,\n  g: 202,\n  b: 160\n}, {\n  r: 218,\n  g: 189,\n  b: 141\n}], [{\n  r: 228,\n  g: 196,\n  b: 142\n}, {\n  r: 214,\n  g: 178,\n  b: 133\n}, {\n  r: 204,\n  g: 166,\n  b: 113\n}]];\nvar colorRanNumber = 10,\n    colorRanRange = 5;\nbackgroundPalette.push(generateColor([[0, 0, 100]], colorRanNumber, colorRanRange));\nbackgroundPalette.push(generateColor([[0, 0, 92]], colorRanNumber, colorRanRange));\nbackgroundPalette.push(generateColor([[0, 0, 21]], colorRanNumber, colorRanRange));\nbackgroundPalette.push(generateColor([[164, 15, 72]], colorRanNumber, colorRanRange));\nbackgroundPalette.push(generateColor([[248, 36, 58]], colorRanNumber, colorRanRange));\nbackgroundPalette.push(generateColor([[39, 49, 98], [331, 60, 96]], colorRanNumber, colorRanRange));\nbackgroundPalette.push(generateColor([[328, 33, 100], [213, 26, 100]], colorRanNumber, colorRanRange));\nbackgroundPalette.push(generateColor([[187, 43, 100], [325, 21, 100]], colorRanNumber, colorRanRange));\nbackgroundPalette.push(generateColor([[171, 49, 91], [223, 44, 89]], colorRanNumber, colorRanRange));\nbackgroundPalette.push(generateColor([[336, 42, 100], [222, 93, 60]], colorRanNumber, colorRanRange));\nbackgroundPalette.push(generateColor([[36, 32, 99], [188, 52, 95]], colorRanNumber, colorRanRange));\nbackgroundPalette.push(generateColor([[135, 64, 91], [259, 67, 96]], colorRanNumber, colorRanRange));\nbackgroundPalette.push(generateColor([[8, 25, 98], [188, 51, 85]], colorRanNumber, colorRanRange));\ncolorRanRange = 8;\nelementPalettePure.push(generateColor([[0, 0, 100]], colorRanNumber, colorRanRange));\nelementPalettePure.push(generateColor([[0, 0, 84]], colorRanNumber, colorRanRange));\nelementPalettePure.push(generateColor([[77, 13, 21]], colorRanNumber, colorRanRange));\nelementPalettePure.push(generateColor([[252, 59, 100]], colorRanNumber, colorRanRange));\nelementPalettePure.push(generateColor([[154, 37, 94]], colorRanNumber, colorRanRange));\nelementPalettePure.push(generateColor([[339, 40, 100]], colorRanNumber, colorRanRange));\nelementPalettePure.push(generateColor([[47, 78, 98]], colorRanNumber, colorRanRange));\nelementPalettePure.push(generateColor([[296, 59, 99]], colorRanNumber, colorRanRange));\nelementPalettePure.push(generateColor([[187, 45, 91]], colorRanNumber, colorRanRange));\nelementPalettePure.push(generateColor([[347, 78, 100]], colorRanNumber, colorRanRange));\nelementPaletteGrad.push(generateColor([[0, 0, 93], [0, 0, 47]], colorRanNumber, colorRanRange));\nelementPaletteGrad.push(generateColor([[51, 19, 100], [334, 45, 100]], colorRanNumber, colorRanRange));\nelementPaletteGrad.push(generateColor([[58, 83, 100], [326, 80, 95]], colorRanNumber, colorRanRange));\nelementPaletteGrad.push(generateColor([[24, 49, 100], [274, 79, 91]], colorRanNumber, colorRanRange));\nelementPaletteGrad.push(generateColor([[135, 64, 91], [62, 81, 96]], colorRanNumber, colorRanRange));\nelementPaletteGrad.push(generateColor([[135, 64, 91], [259, 67, 96]], colorRanNumber, colorRanRange));\nelementPaletteGrad.push(generateColor([[352, 42, 99], [183, 75, 95]], colorRanNumber, colorRanRange));\nelementPaletteGrad.push(generateColor([[319, 86, 89], [190, 46, 93]], colorRanNumber, colorRanRange));\nelementPaletteGrad.push(generateColor([[181, 80, 93], [259, 67, 96]], colorRanNumber, colorRanRange));\nelementPaletteGrad.push(generateColor([[207, 86, 89], [273, 82, 57]], colorRanNumber, colorRanRange));\nelementPaletteGrad.push(generateColor([[30, 11, 93], [23, 44, 74]], colorRanNumber, colorRanRange));\nelementPaletteGrad.push(generateColor([[187, 43, 100], [325, 21, 100]], colorRanNumber, colorRanRange));\nconsole.log(\"elementPaletteGrad\", elementPaletteGrad);\nconsole.log(\"BGPalette\", backgroundPalette); // console.log(\"ElePalette\", elementPalette)\n//Rotation\n\nvar tRotation_1 = [0, 30, 60, 90, 120, 150, 180],\n    tRotation_2 = [0, 36, 72, 108, 144, 180],\n    tRotation_3 = [0, 30, 60, 90, 120, 150, 180],\n    tRotation_4 = [0, 180],\n    tRotation_5 = [0, 45, 90, 135, 180],\n    tRotation_6 = [0, 60, 90, 150, 180],\n    tRotation_7 = [0, 30, 60, 90, 120, 150, 180],\n    sRotation_1 = [0, 30, 60, 90, 120, 150, 180],\n    sRotation_2 = [0, 45, 90, 135, 180],\n    cRotation = [0, 45, 90, 135, 180]; //Layout\n\nvar width = 1080 / 4,\n    height = 1080 / 4;\nvar widthSegments = 15,\n    heightSegments = 20; //position for laying texts\n\nvar textIntersection = [];\ntextIntersection[0] = [width / widthSegments * 2, height / heightSegments * 2, 0];\ntextIntersection[1] = [width / widthSegments * 17, height / heightSegments * 2, 0];\ntextIntersection[2] = [width / widthSegments * 2, height / heightSegments * 32, 0];\ntextIntersection[3] = [width / widthSegments * 17, height / heightSegments * 32, 0]; //four corners\n\nvar p0 = [0, 0],\n    p1 = [width, 0],\n    p2 = [width, height],\n    p3 = [0, height],\n    //root squre coor\np4 = [0, width * width / height],\n    p5 = [width, width * width / height],\n    p6 = [0, height - width * width / height],\n    p7 = [width, height - width * width / height],\n    //three-folds\np8 = [0, height / 3],\n    p9 = [0, height * 2 / 3],\n    p10 = [width, height / 3],\n    p11 = [width, height * 2 / 3],\n    p12 = [width / 3, 0],\n    p13 = [width * 2 / 3, 0],\n    p14 = [width / 3, height],\n    p15 = [width * 2 / 3, height];\nvar coreIntersections = [],\n    normalIntersections = []; //center\n\ncoreIntersections[0] = [width / 2, height / 2, 0]; //three-folds\n\ncoreIntersections[1] = [width / 3, height / 3, 0];\ncoreIntersections[2] = [width / 3, height * 2 / 3, 0];\ncoreIntersections[3] = [width * 2 / 3, height / 3, 0];\ncoreIntersections[4] = [width * 2 / 3, height * 2 / 3, 0]; //squre-intersection\n\ncoreIntersections[5] = calIntersection(height / width, 0, -width / height, width * width / height); //coreIntersections[5].push(Math.atan(-width/height)*90)\n\ncoreIntersections[5].push(0);\ncoreIntersections[6] = calIntersection(height / width, 0, -width / height, height); //coreIntersections[6].push(Math.atan(-width/height)*90)\n\ncoreIntersections[6].push(0);\ncoreIntersections[7] = calIntersection(-height / width, height, width / height, height - width * width / height); //coreIntersections[7].push(Math.atan(width/height)*90)\n\ncoreIntersections[7].push(0);\ncoreIntersections[8] = calIntersection(-height / width, height, width / height, 0); //coreIntersections[8].push(Math.atan(width/height)*90)\n\ncoreIntersections[8].push(0);\n\nfunction calIntersection(a1, b1, a2, b2) {\n  var interPoint = []; //x\n\n  interPoint[0] = (b2 - b1) / (a1 - a2); //y\n\n  interPoint[1] = a1 * interPoint[0] + b1;\n  return interPoint;\n} // Draw white points\n\n\nvar widthGap = width / widthSegments;\nvar heightGap = height / heightSegments;\nvar lineStyle_2 = {\n  width: 0.5,\n  color: '#C1BAC6'\n};\n\nfor (var i = 1; i < widthSegments; i++) {\n  var x = heightGap * i; //draw.line(x,0,x,height).stroke(lineStyle_2)\n  //calculate interaction with horizontal lines\n\n  normalIntersections.push([x, x * height / width, Math.atan(height / width) * 90]);\n  normalIntersections.push([x, x * (-height / width) + height, Math.atan(-height / width) * 90]);\n  normalIntersections.push([x, x * (-width / height) + width * width / height, Math.atan(-width / height) * 90]);\n  normalIntersections.push([x, x * (-width / height) + height, Math.atan(-width / height) * 90]);\n  normalIntersections.push([x, x * width / height + height - width * width / height, Math.atan(width / height) * 90]);\n  normalIntersections.push([x, x * width / height, Math.atan(width / height) * 90]);\n}\n\nfor (var j = 1; j < heightSegments; j++) {\n  var y = heightGap * j; //draw.line(0,y,width,y).stroke(lineStyle_2)\n\n  normalIntersections.push([y / (height / width), y, Math.atan(height / width) * 90]);\n  normalIntersections.push([(y - height) / (-height / width), y, Math.atan(-height / width) * 90]);\n\n  if (y <= width * width / height) {\n    normalIntersections.push([(y - width * width / height) / (-width / height), y, Math.atan(-width / height) * 90]);\n    normalIntersections.push([y / (width / height), y, Math.atan(width / height) * 90]);\n  }\n\n  if (y >= height - width * width / height && y < height) {\n    normalIntersections.push([(y - height) / (-width / height), y, Math.atan(-width / height) * 90]);\n    normalIntersections.push([(y - height + width * width / height) / (width / height), y, Math.atan(width / height) * 90]);\n  }\n} // ============================================\n\n\nfunction loadxmlDoc(file) {\n  try {\n    //IE\n    xmlDoc = new ActiveXObject(\"Microsoft.XMLDOM\");\n  } catch (e) {\n    ////Firefox, Mozilla, Opera, etc\n    xmlDoc = document.implementation.createDocument(\"\", \"\", null);\n  }\n\n  try {\n    xmlDoc.async = false;\n    xmlDoc.load(file);\n  } catch (e) {\n    // for Chrome\n    var xmlhttp = new window.XMLHttpRequest();\n    xmlhttp.open(\"GET\", file, false);\n    xmlhttp.send(null);\n    xmlDoc = xmlhttp.responseXML.documentElement;\n  }\n\n  return xmlDoc;\n}\n\nvar ob = loadxmlDoc(\"js/all.xml\");\nvar svg = ob.getElementsByTagName(\"svg\"); //create all possible shapes in the canvas\n\nfunction createShapes(cList, rList, tList, pList, draw) {\n  for (var i = 0; i < svg.length; i++) {\n    var shape = draw.group();\n\n    if (svg[i].getElementById('triangle')) {\n      data = svg[i].getElementById('triangle').childNodes[1];\n      var transform = svg[i].getElementById('triangle').getAttribute(\"transform\").match(/[^\\(]+(?=\\))/g)[0].split(',');\n      var point = svg[i].getElementById('point');\n      var index = parseInt(data.id.split(\"/\")[1]) + 4 + (parseInt(data.id.split(\"/\")[2]) + 4) * 9; // console.log(data.id)\n      //check if the element has transform data\n\n      if (svg[i].getElementById(data.id).getAttribute(\"transform\")) {\n        var elementTransform = svg[i].getElementById(data.id).getAttribute(\"transform\").match(/[^\\(]+(?=\\))/g)[0].split(','); // console.log(elementTransform)\n\n        transform[0] = parseFloat(transform[0]) + parseFloat(elementTransform[0]);\n        transform[1] = parseFloat(transform[1]) + parseFloat(elementTransform[1]);\n\n        if (svg[i].getElementById(data.id).getAttribute(\"transform\").indexOf(\"scale\") > 0) {\n          var scaleValue = svg[i].getElementById(data.id).getAttribute(\"transform\").match(/scale.*?\\)/g)[0].match(/[^\\(]+(?=\\))/g)[0].split(',');\n          shape.scale(parseInt(scaleValue[0]), parseInt(scaleValue[1]));\n        }\n      } // set attributes of shape\n\n\n      if (point) {\n        var cx = parseFloat(point.getAttribute(\"x\"));\n        var cy = parseFloat(point.getAttribute(\"y\"));\n        shape.attr({\n          \"name\": data.id,\n          \"cx\": cx,\n          \"cy\": cy,\n          \"transform\": \"translate(\" + (parseFloat(transform[0]) - cx) + \",\" + (parseFloat(transform[1]) - cy) + \")\",\n          \"width\": parseFloat(svg[i].getAttribute(\"width\").match(/\\d+/g)[0]),\n          \"height\": parseFloat(svg[i].getAttribute(\"height\").match(/\\d+/g)[0])\n        });\n      } else {\n        shape.attr({\n          \"name\": data.id,\n          \"transform\": \"translate(\" + (parseFloat(transform[0]) - parseFloat(svg[i].getAttribute(\"width\").match(/\\d+/g)[0]) / 2) + \",\" + (parseFloat(transform[1]) - parseFloat(svg[i].getAttribute(\"height\").match(/\\d+/g)[0]) / 2) + \")\",\n          \"width\": parseFloat(svg[i].getAttribute(\"width\").match(/\\d+/g)[0]),\n          \"height\": parseFloat(svg[i].getAttribute(\"height\").match(/\\d+/g)[0])\n        });\n      } // set content of shape\n\n\n      if (svg[i].getElementsByTagName('path')[0]) {\n        shape.path(svg[i].getElementsByTagName('path')[0].getAttribute(\"d\"));\n      } else if (svg[i].getElementsByTagName('polygon')[0]) {\n        shape.add(draw.polygon().attr(\"points\", svg[i].getElementsByTagName('polygon')[0].getAttribute(\"points\")));\n      }\n\n      tList[index] = shape.clone();\n    } else if (svg[i].getElementById('square')) {\n      data = svg[i].getElementById('square').childNodes[1];\n      var transform = svg[i].getElementById('square').getAttribute(\"transform\").match(/[^\\(]+(?=\\))/g)[0].split(',');\n      var point = svg[i].getElementById('point');\n      var index = parseInt(data.id.split(\"/\")[1]) + 4 + (parseInt(data.id.split(\"/\")[2]) + 4) * 9; //check if the element has transform data\n\n      if (svg[i].getElementById(data.id).getAttribute(\"transform\")) {\n        var elementTransform = svg[i].getElementById(data.id).getAttribute(\"transform\").match(/[^\\(]+(?=\\))/g)[0].split(',');\n        console.log(elementTransform);\n        transform[0] = parseFloat(transform[0]) + parseFloat(elementTransform[0]);\n        transform[1] = parseFloat(transform[1]) + parseFloat(elementTransform[1]);\n\n        if (svg[i].getElementById(data.id).getAttribute(\"transform\").indexOf(\"scale\") > 0) {\n          var scaleValue = svg[i].getElementById(data.id).getAttribute(\"transform\").match(/scale.*?\\)/g)[0].match(/[^\\(]+(?=\\))/g)[0].split(',');\n          shape.scale(parseInt(scaleValue[0]), parseInt(scaleValue[1]));\n        }\n      } // set attributes of shape\n\n\n      if (point) {\n        var cx = parseFloat(point.getAttribute(\"x\"));\n        var cy = parseFloat(point.getAttribute(\"y\"));\n        shape.attr({\n          \"name\": data.id,\n          \"cx\": cx,\n          \"cy\": cy,\n          \"transform\": \"translate(\" + (parseFloat(transform[0]) - cx) + \",\" + (parseFloat(transform[1]) - cy) + \")\",\n          \"width\": parseFloat(svg[i].getAttribute(\"width\").match(/\\d+/g)[0]),\n          \"height\": parseFloat(svg[i].getAttribute(\"height\").match(/\\d+/g)[0])\n        });\n      } else {\n        shape.attr({\n          \"name\": data.id,\n          \"transform\": \"translate(\" + (parseFloat(transform[0]) - parseFloat(svg[i].getAttribute(\"width\").match(/\\d+/g)[0]) / 2) + \",\" + (parseFloat(transform[1]) - parseFloat(svg[i].getAttribute(\"height\").match(/\\d+/g)[0]) / 2) + \")\",\n          \"width\": parseFloat(svg[i].getAttribute(\"width\").match(/\\d+/g)[0]),\n          \"height\": parseFloat(svg[i].getAttribute(\"height\").match(/\\d+/g)[0])\n        });\n      } // set content of shape\n\n\n      if (svg[i].getElementsByTagName('path')[0]) {\n        shape.path(svg[i].getElementsByTagName('path')[0].getAttribute(\"d\"));\n      } else if (svg[i].getElementsByTagName('polygon')[0]) {\n        shape.add(draw.polygon().attr(\"points\", svg[i].getElementsByTagName('polygon')[0].getAttribute(\"points\")));\n      }\n\n      rList[index] = shape.clone();\n    } else if (svg[i].getElementById('circular')) {\n      data = svg[i].getElementById('circular').childNodes[1];\n      var transform = svg[i].getElementById('circular').getAttribute(\"transform\").match(/[^\\(]+(?=\\))/g)[0].split(',');\n      var point = svg[i].getElementById('point');\n      var index = parseInt(data.id.split(\"/\")[1]) + 4 + (parseInt(data.id.split(\"/\")[2]) + 4) * 9; //check if the element has transform data\n\n      if (svg[i].getElementById(data.id).getAttribute(\"transform\")) {\n        var elementTransform = svg[i].getElementById(data.id).getAttribute(\"transform\").match(/[^\\(]+(?=\\))/g)[0].split(','); // console.log(elementTransform)\n\n        transform[0] = parseFloat(transform[0]) + parseFloat(elementTransform[0]);\n        transform[1] = parseFloat(transform[1]) + parseFloat(elementTransform[1]);\n\n        if (svg[i].getElementById(data.id).getAttribute(\"transform\").indexOf(\"scale\") > 0) {\n          var scaleValue = svg[i].getElementById(data.id).getAttribute(\"transform\").match(/scale.*?\\)/g)[0].match(/[^\\(]+(?=\\))/g)[0].split(',');\n          shape.scale(parseInt(scaleValue[0]), parseInt(scaleValue[1]));\n        }\n      } // set attributes of shape\n\n\n      if (point) {\n        var cx = parseFloat(point.getAttribute(\"x\"));\n        var cy = parseFloat(point.getAttribute(\"y\"));\n        shape.attr({\n          \"name\": data.id,\n          \"cx\": cx,\n          \"cy\": cy,\n          \"transform\": \"translate(\" + (parseFloat(transform[0]) - cx) + \",\" + (parseFloat(transform[1]) - cy) + \")\",\n          \"width\": parseFloat(svg[i].getAttribute(\"width\").match(/\\d+/g)[0]),\n          \"height\": parseFloat(svg[i].getAttribute(\"height\").match(/\\d+/g)[0])\n        });\n      } else {\n        shape.attr({\n          \"name\": data.id,\n          \"transform\": \"translate(\" + (parseFloat(transform[0]) - parseFloat(svg[i].getAttribute(\"width\").match(/\\d+/g)[0]) / 2) + \",\" + (parseFloat(transform[1]) - parseFloat(svg[i].getAttribute(\"height\").match(/\\d+/g)[0]) / 2) + \")\",\n          \"width\": parseFloat(svg[i].getAttribute(\"width\").match(/\\d+/g)[0]),\n          \"height\": parseFloat(svg[i].getAttribute(\"height\").match(/\\d+/g)[0])\n        });\n      } // set content of shape\n\n\n      if (svg[i].getElementsByTagName('path')[0]) {\n        shape.path(svg[i].getElementsByTagName('path')[0].getAttribute(\"d\"));\n      } else if (svg[i].getElementsByTagName('ellipse')[0]) {\n        shape.add(draw.ellipse().attr({\n          \"cx\": svg[i].getElementsByTagName('ellipse')[0].getAttribute(\"cx\"),\n          \"cy\": svg[i].getElementsByTagName('ellipse')[0].getAttribute(\"cy\"),\n          \"rx\": svg[i].getElementsByTagName('ellipse')[0].getAttribute(\"rx\"),\n          \"ry\": svg[i].getElementsByTagName('ellipse')[0].getAttribute(\"ry\")\n        }));\n      } else if (svg[i].getElementsByTagName('circle')[0]) {\n        shape.add(draw.circle().attr({\n          \"cx\": svg[i].getElementsByTagName('circle')[0].getAttribute(\"cx\"),\n          \"cy\": svg[i].getElementsByTagName('circle')[0].getAttribute(\"cy\"),\n          \"r\": svg[i].getElementsByTagName('circle')[0].getAttribute(\"r\")\n        }));\n      }\n\n      cList[index] = shape.clone();\n    } else if (svg[i].getElementById('people')) {\n      data = svg[i].getElementById('people').childNodes[1];\n      var transform = svg[i].getElementById('people').getAttribute(\"transform\").match(/[^\\(]+(?=\\))/g)[0].split(',');\n      shape.attr({\n        \"name\": data.id,\n        \"transform\": \"translate(\" + (parseFloat(transform[0]) + parseFloat(svg[i].getAttribute(\"width\").match(/\\d+/g)[0]) / 2) + \",\" + (parseFloat(transform[1]) + parseFloat(svg[i].getAttribute(\"height\").match(/\\d+/g)[0]) / 2) + \")\",\n        \"width\": parseFloat(svg[i].getAttribute(\"width\").match(/\\d+/g)[0]),\n        \"height\": parseFloat(svg[i].getAttribute(\"height\").match(/\\d+/g)[0])\n      });\n      var transformHead = svg[i].getElementById('head').getAttribute(\"transform\").match(/[^\\(]+(?=\\))/g)[0].split(',');\n      var head = draw.group().translate(parseFloat(transformHead[0]), parseFloat(transformHead[1])).addClass(\"head\");\n      var headPaths = svg[i].getElementById('head').getElementsByTagName(\"path\"); // console.log(headPaths)\n\n      for (var index = 0; index < headPaths.length; index++) {\n        var newPath = draw.path(headPaths[index].getAttribute(\"d\"));\n        if (headPaths[index].getAttribute(\"id\") == \"nose\" || headPaths[index].getAttribute(\"id\") == \"ear\" || headPaths[index].getAttribute(\"id\") == \"ear2\") newPath.addClass(\"nose\");\n        if (headPaths[index].getAttribute(\"id\") == \"shadow\") newPath.addClass(\"shadow\");\n        if (headPaths[index].getAttribute(\"id\") == \"face\" || headPaths[index].getAttribute(\"id\") == \"neck\") newPath.addClass(\"skin\");\n\n        if (headPaths[index].getAttribute(\"fill\")) {\n          var color = headPaths[index].getAttribute(\"fill\");\n          newPath.fill(color);\n        }\n\n        if (headPaths[index].getAttribute(\"transform\")) {\n          if (headPaths[index].getAttribute(\"transform\").indexOf(\"scale\") > 0) {\n            var scaleValue = headPaths[index].getAttribute(\"transform\").match(/scale.*?\\)/g)[0].match(/[^\\(]+(?=\\))/g)[0].split(',');\n            newPath.scale(parseInt(scaleValue[0]), parseInt(scaleValue[1]));\n          }\n\n          if (headPaths[index].getAttribute(\"transform\").indexOf(\"rotate\") > 0) {\n            var rotateValue = headPaths[index].getAttribute(\"transform\").match(/rotate.*?\\)/g)[0].match(/[^\\(]+(?=\\))/g)[0];\n            newPath.rotate(parseFloat(rotateValue));\n          }\n        }\n\n        head.add(newPath);\n      }\n\n      var headCircles = svg[i].getElementById('head').getElementsByTagName(\"ellipse\");\n\n      for (var index = 0; index < headCircles.length; index++) {\n        var newCircle = draw.ellipse().attr({\n          \"cx\": headCircles[index].getAttribute(\"cx\"),\n          \"cy\": headCircles[index].getAttribute(\"cy\"),\n          \"rx\": headCircles[index].getAttribute(\"rx\"),\n          \"ry\": headCircles[index].getAttribute(\"ry\")\n        });\n\n        if (headCircles[index].getAttribute(\"fill\")) {\n          var color = headCircles[index].getAttribute(\"fill\");\n          newCircle.fill(color);\n        }\n\n        if (headCircles[index].getAttribute(\"transform\")) {\n          if (headCircles[index].getAttribute(\"transform\").indexOf(\"scale\") > 0) {\n            var scaleValue = headCircles[index].getAttribute(\"transform\").match(/scale.*?\\)/g)[0].match(/[^\\(]+(?=\\))/g)[0].split(',');\n            newCircle.scale(parseInt(scaleValue[0]), parseInt(scaleValue[1]));\n          }\n\n          if (headCircles[index].getAttribute(\"transform\").indexOf(\"rotate\") > 0) {\n            var rotateValue = headCircles[index].getAttribute(\"transform\").match(/rotate.*?\\)/g)[0].match(/[^\\(]+(?=\\))/g)[0];\n            newCircle.rotate(parseFloat(rotateValue));\n          }\n        }\n\n        head.add(newCircle);\n      }\n\n      var arm = svg[i].getElementById('arm');\n      var newArm = draw.path(arm.getAttribute(\"d\")).fill(arm.getAttribute(\"fill\")).addClass(\"skin\");\n      var clothes = svg[i].getElementById('clothes');\n      var newClothes = draw.path(clothes.getAttribute(\"d\")).addClass(\"clothes\");\n      var pattern = svg[i].getElementById('pattern').getElementsByTagName(\"path\")[0];\n      var newPattern = draw.path(pattern.getAttribute(\"d\")).addClass('logo');\n      var transform = svg[i].getElementById('pattern').getAttribute(\"transform\").match(/[^\\(]+(?=\\))/g)[0].split(',');\n      var color = svg[i].getElementById('pattern').getAttribute(\"fill\");\n      newPattern.attr({\n        \"transform\": \"translate(\" + parseFloat(transform[0]) + \",\" + parseFloat(transform[1]) + \")\"\n      });\n      newPattern.fill(color);\n      shape.add(head);\n      shape.add(newArm);\n      shape.add(newClothes);\n      shape.add(newPattern);\n      pList.push(shape.clone());\n    }\n  }\n}\n\nvar drawList = [];\n\nvar _draw = SVG('test').size(width, height);\n\nvar _circleList = [],\n    _rectList = [],\n    _triList = [],\n    _peopleList = [];\ncreateShapes(_circleList, _rectList, _triList, _peopleList, _draw); //Define the number of deatures for each shape\n\nconst NUM_SHAPE_FEATURES = 15,\n      MAX_ELEMENTS = 18,\n      NUM_PEOPLE_FEATURES = 17,\n      NUM_TEXT_FEATURES = 1,\n      NUM_BG_FEATURES = 6,\n      NUM_ELEMENT_TYPE = 3,\n      NUM_ELEMENT_X = 9,\n      NUM_ELEMENT_Y = 9;\n\nfunction rotate(shape, index, csvdata, i) {\n  var randomRotation = index;\n  var shapeName = shape.node.attributes.name.nodeValue.split(\"/\");\n  var rotationAngel;\n\n  if (shapeName[0] == \"t\") {\n    if (parseInt(shapeName[1]) == -4) {\n      rotationAngel = tRotation_1[parseInt(tRotation_1.length * randomRotation)];\n      csvdata[i].data[6] = parseInt(tRotation_1.length * randomRotation) / tRotation_1.length;\n    } else if (parseInt(shapeName[1]) == -3) {\n      rotationAngel = tRotation_2[parseInt(tRotation_2.length * randomRotation)];\n      csvdata[i].data[6] = parseInt(tRotation_2.length * randomRotation) / tRotation_2.length;\n    } else if (parseInt(shapeName[1]) == -2 || parseInt(shapeName[1]) == -1 || parseInt(shapeName[1]) == 0) {\n      rotationAngel = tRotation_3[parseInt(tRotation_3.length * randomRotation)];\n      csvdata[i].data[6] = parseInt(tRotation_3.length * randomRotation) / tRotation_3.length;\n    } else if (parseInt(shapeName[1]) == 1) {\n      rotationAngel = tRotation_4[parseInt(tRotation_4.length * randomRotation)];\n      csvdata[i].data[6] = parseInt(tRotation_4.length * randomRotation) / tRotation_4.length;\n    } else if (parseInt(shapeName[1]) == 2) {\n      rotationAngel = tRotation_5[parseInt(tRotation_5.length * randomRotation)];\n      csvdata[i].data[6] = parseInt(tRotation_5.length * randomRotation) / tRotation_5.length;\n    } else if (parseInt(shapeName[1]) == 3) {\n      rotationAngel = tRotation_6[parseInt(tRotation_6.length * randomRotation)];\n      csvdata[i].data[6] = parseInt(tRotation_6.length * randomRotation) / tRotation_6.length;\n    } else if (parseInt(shapeName[1]) == 4) {\n      rotationAngel = tRotation_7[parseInt(tRotation_7.length * randomRotation)];\n      csvdata[i].data[6] = parseInt(tRotation_7.length * randomRotation) / tRotation_7.length;\n    }\n  } //\n  else if (shapeName[0] == \"s\") {\n      if (parseInt(shapeName[1]) >= -4 && parseInt(shapeName[1]) <= -1) {\n        rotationAngel = sRotation_1[parseInt(sRotation_1.length * randomRotation)];\n        csvdata[i].data[6] = parseInt(sRotation_1.length * randomRotation) / sRotation_1.length;\n      } else if (parseInt(shapeName[1]) >= 0 && parseInt(shapeName[1]) <= 4) {\n        rotationAngel = sRotation_2[parseInt(sRotation_2.length * randomRotation)];\n        csvdata[i].data[6] = parseInt(sRotation_2.length * randomRotation) / sRotation_2.length;\n      }\n    } else if (shapeName[0] == \"c\") {\n      rotationAngel = cRotation[parseInt(cRotation.length * randomRotation)];\n      csvdata[i].data[6] = parseInt(cRotation.length * randomRotation) / cRotation.length;\n    }\n\n  if (shape.attr(\"cx\") && shape.attr(\"cy\")) {\n    shape.rotate(rotationAngel, shape.attr(\"cx\"), shape.attr(\"cy\"));\n  } else {\n    shape.rotate(rotationAngel);\n  }\n\n  csvdata[i].data[6] = csvdata[i].data[6].toString();\n  return randomRotation;\n}\n\nvar div = document.createElement(\"div\");\ndiv.setAttribute(\"id\", \"container\");\n\nfunction createPosters(csvdata, num) {\n  var subdiv = document.createElement(\"div\");\n  subdiv.setAttribute(\"id\", \"poster\" + num);\n  subdiv.setAttribute(\"class\", \"poster\");\n  div.appendChild(subdiv);\n  document.body.appendChild(div);\n  var draw = SVG('poster' + num).size(width, height);\n\n  var circleList = _circleList.concat(),\n      rectList = _rectList.concat(),\n      triList = _triList.concat(),\n      peopleList = _peopleList.concat();\n\n  var shapeList = triList.concat(rectList, circleList);\n  var bgGradient = draw.gradient('linear', function (stop) {\n    var bgHSV = csvdata[csvdata.length - 1];\n    stop.at(0, createRGBfromHSV(bgHSV.data[0], bgHSV.data[1], bgHSV.data[2]));\n    stop.at(1, createRGBfromHSV(bgHSV.data[3], bgHSV.data[4], bgHSV.data[5]));\n  });\n  bgGradient.from(\"0%\", \"0%\").to(\"0%\", \"100%\");\n  draw.rect(width, height).fill(bgGradient);\n\n  for (var i = 0; i < csvdata.length; i++) {\n    if (csvdata[i].name == \"element\") {\n      var shapeNormalX = Math.round((NUM_ELEMENT_TYPE - 1) * csvdata[i].data[0]),\n          shapeNormalY = Math.round((NUM_ELEMENT_X - 1) * csvdata[i].data[1]),\n          shapeNormalZ = Math.round((NUM_ELEMENT_Y - 1) * csvdata[i].data[2]);\n      var elementColor = draw.gradient('linear', function (stop) {\n        stop.at(0, createRGBfromHSV(csvdata[i].data[7], csvdata[i].data[8], csvdata[i].data[9]));\n        stop.at(1, createRGBfromHSV(csvdata[i].data[10], csvdata[i].data[11], csvdata[i].data[12]));\n      });\n      elementColor.from(\"0%\", \"0%\").to(\"0%\", \"100%\"); // console.log(shapeList)\n      //console.log(shapeNormalX,shapeNormalY,shapeNormalZ,shapeNormalX*NUM_ELEMENT_X*NUM_ELEMENT_Y+NUM_ELEMENT_X*shapeNormalY+shapeNormalZ)\n\n      var shapeNormal = shapeList[shapeNormalX * NUM_ELEMENT_X * NUM_ELEMENT_Y + NUM_ELEMENT_X * shapeNormalY + shapeNormalZ].clone();\n      var shapeScale = Math.sqrt(width * height * csvdata[i].data[3] / (shapeNormal.width() * shapeNormal.height())); //draw.use(shapeNormal)\n      // console.log(width*csvdata[i].data[4],height*csvdata[i].data[5],shapeScale,parseFloat(csvdata[i].data[13]))\n\n      shapeNormal.dx(width * csvdata[i].data[4]).dy(height * csvdata[i].data[5]);\n      rotate(shapeNormal, csvdata[i].data[6], csvdata, i);\n      shapeNormal.scale(shapeScale, shapeScale).fill(elementColor).opacity(parseFloat(csvdata[i].data[13]));\n    }\n  }\n\n  drawList.push(draw);\n}\n\nconsole.log(drawList);\nvar backedOpacity;\n\nvar compare = function (prop) {\n  return function (a, b) {\n    var val1 = a[prop];\n    var val2 = b[prop];\n    return val1 - val2;\n  };\n};\n\nvar posterStart = 0,\n    posterEnd = 601,\n    posterGap = 1;\n$(\"#setting-confirm\").click(function () {\n  posterStart = parseInt($(\"#poster-start\").val());\n  posterEnd = parseInt($(\"#poster-end\").val());\n  posterGap = parseInt($(\"#poster-gap\").val());\n  $(\"#container\").empty();\n  drawList = [];\n  setPoster(posterStart, posterEnd, posterGap);\n});\nvar dataPath = \"js/record_new.csv\";\nsetPoster(posterStart, posterEnd, posterGap);\nvar newcsv = [];\n\nfunction setPoster(data) {\n  var features = csv2array(data);\n  console.log(features);\n\n  for (var i = 1; i < features.length; i++) {\n    var element = {\n      \"data\": features[i].slice(0, 15),\n      \"index\": features[i][14],\n      \"name\": \"element\"\n    },\n        element2 = {\n      \"data\": features[i].slice(15, 30),\n      \"index\": features[i][29],\n      \"name\": \"element\"\n    },\n        element3 = {\n      \"data\": features[i].slice(30, 45),\n      \"index\": features[i][44],\n      \"name\": \"element\"\n    },\n        element4 = {\n      \"data\": features[i].slice(45, 60),\n      \"index\": features[i][59],\n      \"name\": \"element\"\n    },\n        element5 = {\n      \"data\": features[i].slice(60, 75),\n      \"index\": features[i][74],\n      \"name\": \"element\"\n    },\n        element6 = {\n      \"data\": features[i].slice(75, 90),\n      \"index\": features[i][89],\n      \"name\": \"element\"\n    },\n        element7 = {\n      \"data\": features[i].slice(90, 105),\n      \"index\": features[i][104],\n      \"name\": \"element\"\n    },\n        element8 = {\n      \"data\": features[i].slice(105, 120),\n      \"index\": features[i][119],\n      \"name\": \"element\"\n    },\n        element9 = {\n      \"data\": features[i].slice(120, 135),\n      \"index\": features[i][134],\n      \"name\": \"element\"\n    },\n        element10 = {\n      \"data\": features[i].slice(135, 150),\n      \"index\": features[i][149],\n      \"name\": \"element\"\n    },\n        element11 = {\n      \"data\": features[i].slice(150, 165),\n      \"index\": features[i][164],\n      \"name\": \"element\"\n    },\n        element12 = {\n      \"data\": features[i].slice(165, 180),\n      \"index\": features[i][179],\n      \"name\": \"element\"\n    },\n        element13 = {\n      \"data\": features[i].slice(180, 195),\n      \"index\": features[i][194],\n      \"name\": \"element\"\n    },\n        element14 = {\n      \"data\": features[i].slice(195, 210),\n      \"index\": features[i][209],\n      \"name\": \"element\"\n    },\n        element15 = {\n      \"data\": features[i].slice(210, 225),\n      \"index\": features[i][224],\n      \"name\": \"element\"\n    },\n        element16 = {\n      \"data\": features[i].slice(225, 240),\n      \"index\": features[i][239],\n      \"name\": \"element\"\n    },\n        element17 = {\n      \"data\": features[i].slice(240, 255),\n      \"index\": features[i][254],\n      \"name\": \"element\"\n    },\n        element18 = {\n      \"data\": features[i].slice(255, 270),\n      \"index\": features[i][269],\n      \"name\": \"element\"\n    },\n        bg = {\n      \"data\": features[i].slice(270, 276),\n      \"name\": \"bg\"\n    };\n    var poster = [element, element2, element3, element4, element5, element6, element7, element8, element9, element10, element11, element12, element13, element14, element15, element16, element17, element18, bg];\n    createPosters(poster, i);\n    var newcsvItem = [];\n\n    for (var index in poster) {\n      for (var j in poster[index].data) {\n        newcsvItem.push(poster[index].data[j]);\n      }\n    }\n\n    newcsv.push(newcsvItem);\n  }\n\n  console.log(newcsv);\n  var goodParameters = {};\n  goodParameters.data = newcsv;\n  $.ajax({\n    type: \"POST\",\n    url: \"/saveRecord\",\n    data: {\n      \"data\": JSON.stringify(goodParameters)\n    },\n    dataType: \"application/json\",\n    success: function (data, err) {\n      if (err) console.log(err);\n    }\n  }); //for inspecting the elements behind the big shapes.\n\n  $(\".poster svg\").on(\"mouseenter\", function () {\n    backedOpacity = [];\n    var selectedID = $(this).parent().attr(\"id\").replace(/[^0-9]/ig, \"\");\n    var selectedDraw = drawList[selectedID];\n    var childNodes = selectedDraw.children();\n\n    for (var index in childNodes) {\n      backedOpacity.push(childNodes[index].opacity());\n      childNodes[index].opacity(0.3);\n    }\n  });\n  $(\".poster svg\").on(\"mouseleave\", function () {\n    var selectedID = $(this).parent().attr(\"id\").replace(/[^0-9]/ig, \"\");\n    var selectedDraw = drawList[selectedID];\n    var childNodes = selectedDraw.children();\n\n    for (var index in childNodes) {\n      if (backedOpacity[index]) childNodes[index].opacity(backedOpacity[index]);else {\n        childNodes[index].opacity(1);\n      }\n    }\n  });\n  $(\".poster\").click(function () {\n    var id = $(this).attr(\"id\");\n    saveSvgAsPng($(\"#\" + id + \" svg\")[0], id + \".png\");\n  });\n}\n\nexport { _circleList, _rectList, _triList, _peopleList, height, width };\nexport { createPosters, createShapes, setPoster };","map":{"version":3,"sources":["/Users/yucheng/WebstormProjects/user-research-prototype/src/autobg/generator.js"],"names":["SVG","$","csv2array","data","delimeter","undefined","length","newline","eof","i","c","charAt","row","col","array","Array","value","cnext","push","createRGBfromHSV","h","s","v","r","g","b","f","p","q","t","arguments","Math","floor","round","getNumberInNormalDistribution","std_dev","offset","randomNormalDistribution","u","w","random","sqrt","log","rgb2hsv","computedH","computedS","computedV","parseInt","replace","isNaN","alert","minRGB","min","maxRGB","max","d","generateColor","colors","number","numberOfColor","colorList","n","hList","sList","vList","k","new_h","new_s","new_v","rgbList","hIndex","sIndex","vIndex","RGBs","posterIndex","backgroundPalette","elementPalettePure","elementPaletteGrad","skinPalette","colorRanNumber","colorRanRange","console","tRotation_1","tRotation_2","tRotation_3","tRotation_4","tRotation_5","tRotation_6","tRotation_7","sRotation_1","sRotation_2","cRotation","width","height","widthSegments","heightSegments","textIntersection","p0","p1","p2","p3","p4","p5","p6","p7","p8","p9","p10","p11","p12","p13","p14","p15","coreIntersections","normalIntersections","calIntersection","a1","b1","a2","b2","interPoint","widthGap","heightGap","lineStyle_2","color","x","atan","j","y","loadxmlDoc","file","xmlDoc","ActiveXObject","e","document","implementation","createDocument","async","load","xmlhttp","window","XMLHttpRequest","open","send","responseXML","documentElement","ob","svg","getElementsByTagName","createShapes","cList","rList","tList","pList","draw","shape","group","getElementById","childNodes","transform","getAttribute","match","split","point","index","id","elementTransform","parseFloat","indexOf","scaleValue","scale","cx","cy","attr","path","add","polygon","clone","ellipse","circle","transformHead","head","translate","addClass","headPaths","newPath","fill","rotateValue","rotate","headCircles","newCircle","arm","newArm","clothes","newClothes","pattern","newPattern","drawList","_draw","size","_circleList","_rectList","_triList","_peopleList","NUM_SHAPE_FEATURES","MAX_ELEMENTS","NUM_PEOPLE_FEATURES","NUM_TEXT_FEATURES","NUM_BG_FEATURES","NUM_ELEMENT_TYPE","NUM_ELEMENT_X","NUM_ELEMENT_Y","csvdata","randomRotation","shapeName","node","attributes","name","nodeValue","rotationAngel","toString","div","createElement","setAttribute","createPosters","num","subdiv","appendChild","body","circleList","concat","rectList","triList","peopleList","shapeList","bgGradient","gradient","stop","bgHSV","at","from","to","rect","shapeNormalX","shapeNormalY","shapeNormalZ","elementColor","shapeNormal","shapeScale","dx","dy","opacity","backedOpacity","compare","prop","a","val1","val2","posterStart","posterEnd","posterGap","click","val","empty","setPoster","dataPath","newcsv","features","element","slice","element2","element3","element4","element5","element6","element7","element8","element9","element10","element11","element12","element13","element14","element15","element16","element17","element18","bg","poster","newcsvItem","goodParameters","ajax","type","url","JSON","stringify","dataType","success","err","on","selectedID","parent","selectedDraw","children","saveSvgAsPng"],"mappings":"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","sourcesContent":["import * as SVG from 'svg.js'\nimport $ from 'jquery'\n\nfunction csv2array(data, delimeter) {\n    // Retrieve the delimeter\n    if (delimeter == undefined)\n        delimeter = ',';\n    if (delimeter && delimeter.length > 1)\n        delimeter = ',';\n\n    // initialize variables\n    var newline = '\\n';\n    var eof = '';\n    var i = 0;\n    var c = data.charAt(i);\n    var row = 0;\n    var col = 0;\n    var array = new Array();\n\n    while (c != eof) {\n        // skip whitespaces\n        while (c == ' ' || c == '\\t' || c == '\\r') {\n            c = data.charAt(++i); // read next char\n        }\n\n        // get value\n        var value = \"\";\n        if (c == '\\\"') {\n            // value enclosed by double-quotes\n            c = data.charAt(++i);\n\n            do {\n                if (c != '\\\"') {\n                    // read a regular character and go to the next character\n                    value += c;\n                    c = data.charAt(++i);\n                }\n\n                if (c == '\\\"') {\n                    // check for escaped double-quote\n                    var cnext = data.charAt(i+1);\n                    if (cnext == '\\\"') {\n                        // this is an escaped double-quote.\n                        // Add a double-quote to the value, and move two characters ahead.\n                        value += '\\\"';\n                        i += 2;\n                        c = data.charAt(i);\n                    }\n                }\n            }\n            while (c != eof && c != '\\\"');\n\n            if (c == eof) {\n                throw \"Unexpected end of data, double-quote expected\";\n            }\n\n            c = data.charAt(++i);\n        }\n        else {\n            // value without quotes\n            while (c != eof && c != delimeter && c!= newline && c != ' ' && c != '\\t' && c != '\\r') {\n                value += c;\n                c = data.charAt(++i);\n            }\n        }\n\n        // add the value to the array\n        if (array.length <= row)\n            array.push(new Array());\n        array[row].push(value);\n\n        // skip whitespaces\n        while (c == ' ' || c == '\\t' || c == '\\r') {\n            c = data.charAt(++i);\n        }\n\n        // go to the next row or column\n        if (c == delimeter) {\n            // to the next column\n            col++;\n        }\n        else if (c == newline) {\n            // to the next row\n            col = 0;\n            row++;\n        }\n        else if (c != eof) {\n            // unexpected character\n            throw \"Delimiter expected after character \" + i;\n        }\n\n        // go to the next character\n        c = data.charAt(++i);\n    }\n\n    return array;\n}\n\nfunction createRGBfromHSV(h, s, v) {\n    var r, g, b, i, f, p, q, t;\n    if (arguments.length === 1) {\n        s = h.s, v = h.v, h = h.h;\n    }\n    i = Math.floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n    switch (i % 6) {\n        case 0: r = v, g = t, b = p; break;\n        case 1: r = q, g = v, b = p; break;\n        case 2: r = p, g = v, b = t; break;\n        case 3: r = p, g = q, b = v; break;\n        case 4: r = t, g = p, b = v; break;\n        case 5: r = v, g = p, b = q; break;\n    }\n    return {\n        r: Math.round(r * 255),\n        g: Math.round(g * 255),\n        b: Math.round(b * 255)\n    };\n}\n\n\nfunction getNumberInNormalDistribution(std_dev){\n    var offset = randomNormalDistribution()*std_dev;\n    return offset;\n}\n\nfunction randomNormalDistribution(){\n    var u=0.0, v=0.0, w=0.0, c=0.0;\n    do{\n        u=Math.random()*2-1.0;\n        v=Math.random()*2-1.0;\n        w=u*u+v*v;\n    }while(w==0.0||w>=1.0)\n    c=Math.sqrt((-2*Math.log(w))/w);\n    return u*c;\n}\n\nfunction rgb2hsv (r,g,b) {\n\tvar computedH = 0;\n\tvar computedS = 0;\n\tvar computedV = 0;\n\n\t//remove spaces from input RGB values, convert to int\n\tvar r = parseInt( (''+r).replace(/\\s/g,''),10 );\n\tvar g = parseInt( (''+g).replace(/\\s/g,''),10 );\n\tvar b = parseInt( (''+b).replace(/\\s/g,''),10 );\n\n\tif ( r==null || g==null || b==null ||\n\t isNaN(r) || isNaN(g)|| isNaN(b) ) {\n\talert ('Please enter numeric RGB values!');\n\treturn;\n\t}\n\tif (r<0 || g<0 || b<0 || r>255 || g>255 || b>255) {\n\talert ('RGB values must be in the range 0 to 255.');\n\treturn;\n\t}\n\tr=r/255; g=g/255; b=b/255;\n\tvar minRGB = Math.min(r,Math.min(g,b));\n\tvar maxRGB = Math.max(r,Math.max(g,b));\n\n\t// Black-gray-white\n\tif (minRGB==maxRGB) {\n\tcomputedV = minRGB;\n\treturn [0,0,computedV];\n\t}\n\n\t// Colors other than black-gray-white:\n\tvar d = (r==minRGB) ? g-b : ((b==minRGB) ? r-g : b-r);\n\tvar h = (r==minRGB) ? 3 : ((b==minRGB) ? 1 : 5);\n\tcomputedH = 60*(h - d/(maxRGB - minRGB));\n\tcomputedS = (maxRGB - minRGB)/maxRGB;\n\tcomputedV = maxRGB;\n\treturn [computedH,computedS,computedV];\n}\n\nfunction generateColor(colors, number,std_dev){\n\tvar numberOfColor = colors.length;\n\n\tvar colorList = [];\n\n\tfor(var n = 0; n < colors.length; n++){\n\n\t\tvar hList=[], sList=[], vList=[];\n\n\t\tvar k = number\n\t    for (k; k > 0; k--) {\n\n\t        var offset = getNumberInNormalDistribution(std_dev)\n\n\t        var new_h = colors[n][0] + offset;\n\t        var new_s = colors[n][1] + offset;\n\t        var new_v = colors[n][2] + offset;\n\n\t        if(new_h<0){\n\t            new_h = 360+new_h\n\t        }\n\t        else if(new_h>360){\n\t            new_h = new_h-360\n\t        }\n\n\t        if(new_s<0){\n\t            new_s = new_s * -1\n\t        }\n\t        else if(new_s>100){\n\t            new_s = 200-new_s\n\t        }\n\n\t        if(new_v<0){\n\t            new_v = new_v * -1\n\t        }\n\t        else if(new_v>100){\n\t            new_v = 200-new_v\n\t        }\n\n\t        hList.push(new_h)\n\t        sList.push(new_s)\n\t        vList.push(new_v)\n\t    }\n\n\t    colorList.push([hList,sList,vList])\n\n\t}\n\n\tvar rgbList = []\n\n\tfor (hIndex in colorList[0][0]){\n        for(sIndex in colorList[0][1]){\n            for(vIndex in colorList[0][2]){\n\n        \t\tvar RGBs=[];\n            \tfor(var n=0; n< numberOfColor; n++){\n            \t\tRGBs.push(createRGBfromHSV(colorList[n][0][hIndex]/360,colorList[n][1][sIndex]/100,colorList[n][2][vIndex]/100))\n            \t}\n            \trgbList.push(RGBs)\n            }\n        }\n    }\n\n    return rgbList\n}\n\nvar posterIndex = 0\n\nvar backgroundPalette = [], elementPalettePure = []; elementPaletteGrad = [];\n\n//face_color/nose,ear_color/neck_color\nvar skinPalette = [[{r:252,g:234,b:202},{r:240,g:216,b:182},{r:230,g:203,b:159}],\n\t\t\t\t\t[{r:245,g:219,b:174},{r:232,g:202,b:160},{r:218,g:189,b:141}],\n\t\t\t\t\t[{r:228,g:196,b:142},{r:214,g:178,b:133},{r:204,g:166,b:113}]]\n\nvar colorRanNumber = 10, colorRanRange = 5;\nbackgroundPalette.push(generateColor([[0,0,100]],colorRanNumber,colorRanRange))\nbackgroundPalette.push(generateColor([[0,0,92]],colorRanNumber,colorRanRange))\nbackgroundPalette.push(generateColor([[0,0,21]],colorRanNumber,colorRanRange))\nbackgroundPalette.push(generateColor([[164,15,72]],colorRanNumber,colorRanRange))\nbackgroundPalette.push(generateColor([[248,36,58]],colorRanNumber,colorRanRange))\n\nbackgroundPalette.push(generateColor([[39,49,98],[331,60,96]],colorRanNumber,colorRanRange))\nbackgroundPalette.push(generateColor([[328,33,100],[213,26,100]],colorRanNumber,colorRanRange))\nbackgroundPalette.push(generateColor([[187,43,100],[325,21,100]],colorRanNumber,colorRanRange))\nbackgroundPalette.push(generateColor([[171,49,91],[223,44,89]],colorRanNumber,colorRanRange))\nbackgroundPalette.push(generateColor([[336,42,100],[222,93,60]],colorRanNumber,colorRanRange))\nbackgroundPalette.push(generateColor([[36,32,99],[188,52,95]],colorRanNumber,colorRanRange))\nbackgroundPalette.push(generateColor([[135,64,91],[259,67,96]],colorRanNumber,colorRanRange))\nbackgroundPalette.push(generateColor([[8,25,98],[188,51,85]],colorRanNumber,colorRanRange))\n\ncolorRanRange=8\nelementPalettePure.push(generateColor([[0,0,100]],colorRanNumber,colorRanRange))\nelementPalettePure.push(generateColor([[0,0,84]],colorRanNumber,colorRanRange))\nelementPalettePure.push(generateColor([[77,13,21]],colorRanNumber,colorRanRange))\nelementPalettePure.push(generateColor([[252,59,100]],colorRanNumber,colorRanRange))\nelementPalettePure.push(generateColor([[154,37,94]],colorRanNumber,colorRanRange))\nelementPalettePure.push(generateColor([[339,40,100]],colorRanNumber,colorRanRange))\nelementPalettePure.push(generateColor([[47,78,98]],colorRanNumber,colorRanRange))\nelementPalettePure.push(generateColor([[296,59,99]],colorRanNumber,colorRanRange))\nelementPalettePure.push(generateColor([[187,45,91]],colorRanNumber,colorRanRange))\nelementPalettePure.push(generateColor([[347,78,100]],colorRanNumber,colorRanRange))\n\nelementPaletteGrad.push(generateColor([[0,0,93],[0,0,47]],colorRanNumber,colorRanRange))\nelementPaletteGrad.push(generateColor([[51,19,100],[334,45,100]],colorRanNumber,colorRanRange))\nelementPaletteGrad.push(generateColor([[58,83,100],[326,80,95]],colorRanNumber,colorRanRange))\nelementPaletteGrad.push(generateColor([[24,49,100],[274,79,91]],colorRanNumber,colorRanRange))\nelementPaletteGrad.push(generateColor([[135,64,91],[62,81,96]],colorRanNumber,colorRanRange))\nelementPaletteGrad.push(generateColor([[135,64,91],[259,67,96]],colorRanNumber,colorRanRange))\nelementPaletteGrad.push(generateColor([[352,42,99],[183,75,95]],colorRanNumber,colorRanRange))\nelementPaletteGrad.push(generateColor([[319,86,89],[190,46,93]],colorRanNumber,colorRanRange))\nelementPaletteGrad.push(generateColor([[181,80,93],[259,67,96]],colorRanNumber,colorRanRange))\nelementPaletteGrad.push(generateColor([[207,86,89],[273,82,57]],colorRanNumber,colorRanRange))\nelementPaletteGrad.push(generateColor([[30,11,93],[23,44,74]],colorRanNumber,colorRanRange))\nelementPaletteGrad.push(generateColor([[187,43,100],[325,21,100]],colorRanNumber,colorRanRange))\n\n\nconsole.log(\"elementPaletteGrad\",elementPaletteGrad)\n\n\nconsole.log(\"BGPalette\", backgroundPalette)\n// console.log(\"ElePalette\", elementPalette)\n\n//Rotation\n\nvar tRotation_1 = [0,30,60,90,120,150,180],\n\ttRotation_2 = [0,36,72,108,144,180],\n\ttRotation_3 = [0,30,60,90,120,150,180],\n\ttRotation_4 = [0,180],\n\ttRotation_5 = [0,45,90,135,180],\n\ttRotation_6 = [0,60,90,150,180],\n\ttRotation_7 = [0,30,60,90,120,150,180],\n\n\tsRotation_1 = [0,30,60,90,120,150,180],\n\tsRotation_2 = [0,45,90,135,180],\n\n\tcRotation = [0,45,90,135,180];\n\n\n//Layout\n\nvar width=1080/4, height=1080/4;\n\nvar widthSegments = 15, heightSegments = 20;\n\n//position for laying texts\nvar textIntersection = [];\ntextIntersection[0] = [(width/widthSegments)*2, (height/heightSegments)*2, 0]\ntextIntersection[1] = [(width/widthSegments)*17, (height/heightSegments)*2, 0]\ntextIntersection[2] = [(width/widthSegments)*2, (height/heightSegments)*32, 0]\ntextIntersection[3] = [(width/widthSegments)*17, (height/heightSegments)*32, 0]\n\n\t//four corners\nvar p0 = [0,0],\n\tp1 = [width,0],\n\tp2 = [width, height],\n\tp3 = [0,height],\n\t//root squre coor\n\tp4 = [0,width*width/height],\n\tp5 = [width, width*width/height],\n\tp6 = [0,height-(width*width/height)],\n\tp7 = [width,height-(width*width/height)],\n\t//three-folds\n\tp8 = [0,height/3],\n\tp9 = [0,height*2/3],\n\tp10 = [width,height/3],\n\tp11 = [width,height*2/3],\n\tp12 = [width/3,0],\n\tp13 = [width*2/3,0],\n\tp14 = [width/3,height],\n\tp15 = [width*2/3,height];\n\nvar coreIntersections = [],\n\tnormalIntersections = [];\n\n//center\ncoreIntersections[0] = [width/2, height/2, 0];\n//three-folds\ncoreIntersections[1] = [width/3, height/3, 0];\ncoreIntersections[2] = [width/3, height*2/3, 0];\ncoreIntersections[3] = [width*2/3, height/3, 0];\ncoreIntersections[4] = [width*2/3, height*2/3, 0];\n//squre-intersection\ncoreIntersections[5] = calIntersection(height/width, 0, -width/height, width*width/height);\n//coreIntersections[5].push(Math.atan(-width/height)*90)\ncoreIntersections[5].push(0)\n\ncoreIntersections[6] = calIntersection(height/width, 0, -width/height, height)\n//coreIntersections[6].push(Math.atan(-width/height)*90)\ncoreIntersections[6].push(0)\n\ncoreIntersections[7] = calIntersection(-height/width, height, width/height, height-(width*width/height))\n//coreIntersections[7].push(Math.atan(width/height)*90)\ncoreIntersections[7].push(0)\n\ncoreIntersections[8] = calIntersection(-height/width, height, width/height, 0)\n//coreIntersections[8].push(Math.atan(width/height)*90)\ncoreIntersections[8].push(0)\n\nfunction calIntersection(a1, b1, a2, b2){\n\tvar interPoint = []\n\t//x\n\tinterPoint[0] = (b2-b1)/(a1-a2)\n\t//y\n\tinterPoint[1] = a1*interPoint[0]+b1\n\treturn interPoint\n}\n\n\n// Draw white points\nvar widthGap = width/widthSegments;\nvar heightGap = height/heightSegments;\nvar lineStyle_2 = {width: 0.5 ,color: '#C1BAC6'}\n\nfor (var i = 1; i < widthSegments; i++){\n\n\tvar x = heightGap*i\n\t//draw.line(x,0,x,height).stroke(lineStyle_2)\n\n\t//calculate interaction with horizontal lines\n\tnormalIntersections.push([x, x*height/width, Math.atan(height/width)*90])\n\tnormalIntersections.push([x, x*(-height/width)+height,Math.atan(-height/width)*90])\n\tnormalIntersections.push([x, x*(-width/height)+width*width/height, Math.atan(-width/height)*90])\n\tnormalIntersections.push([x, x*(-width/height)+height, Math.atan(-width/height)*90])\n\tnormalIntersections.push([x, x*width/height+height-(width*width/height), Math.atan(width/height)*90])\n\tnormalIntersections.push([x, x*width/height, Math.atan(width/height)*90])\n}\nfor(var j = 1; j< heightSegments; j++){\n\tvar y = heightGap*j\n\t//draw.line(0,y,width,y).stroke(lineStyle_2)\n\n\tnormalIntersections.push([y/(height/width), y, Math.atan(height/width)*90])\n\tnormalIntersections.push([(y-height)/(-height/width), y, Math.atan(-height/width)*90])\n\n\n\tif(y<=width*width/height){\n\t\tnormalIntersections.push([(y-width*width/height)/(-width/height), y, Math.atan(-width/height)*90])\n\t\tnormalIntersections.push([y/(width/height), y, Math.atan(width/height)*90])\n\t}\n\n\tif(y>=height-width*width/height && y<height){\n\t\tnormalIntersections.push([(y-height)/(-width/height), y, Math.atan(-width/height)*90])\n\t\tnormalIntersections.push([(y-height+(width*width/height))/(width/height), y, Math.atan(width/height)*90])\n\t}\n}\n\n// ============================================\n\nfunction loadxmlDoc(file){\n    try{\n        //IE\n        xmlDoc=new ActiveXObject(\"Microsoft.XMLDOM\");\n    }catch(e){\n        ////Firefox, Mozilla, Opera, etc\n        xmlDoc=document.implementation.createDocument(\"\",\"\",null);\n    }\n\n    try{\n        xmlDoc.async=false;\n        xmlDoc.load(file);\n    }catch(e){\n        // for Chrome\n        var xmlhttp = new window.XMLHttpRequest();\n        xmlhttp.open(\"GET\",file,false);\n        xmlhttp.send(null);\n        xmlDoc = xmlhttp.responseXML.documentElement;\n    }\n    return xmlDoc;\n}\n\nvar ob=loadxmlDoc(\"js/all.xml\");\nvar svg=ob.getElementsByTagName(\"svg\");\n\n\n//create all possible shapes in the canvas\nfunction createShapes (cList, rList, tList, pList, draw) {\n\tfor(var i=0;i<svg.length;i++){\n\t\tvar shape = draw.group()\n\n\t\tif(svg[i].getElementById('triangle')){\n\t    \tdata=svg[i].getElementById('triangle').childNodes[1]\n\t    \tvar transform = svg[i].getElementById('triangle').getAttribute(\"transform\").match(/[^\\(]+(?=\\))/g)[0].split(',')\n\t    \tvar point = svg[i].getElementById('point')\n\t    \tvar index = (parseInt(data.id.split(\"/\")[1])+4) + (parseInt(data.id.split(\"/\")[2])+4)*9\n\n\t    \t// console.log(data.id)\n\n\t    \t//check if the element has transform data\n\t    \tif(svg[i].getElementById(data.id).getAttribute(\"transform\")){\n\t    \t\tvar elementTransform = svg[i].getElementById(data.id).getAttribute(\"transform\").match(/[^\\(]+(?=\\))/g)[0].split(',')\n\t    \t\t// console.log(elementTransform)\n\t    \t\ttransform[0] = parseFloat(transform[0])+parseFloat(elementTransform[0])\n\t    \t\ttransform[1] = parseFloat(transform[1])+parseFloat(elementTransform[1])\n\n\t    \t\tif(svg[i].getElementById(data.id).getAttribute(\"transform\").indexOf(\"scale\")>0){\n\t\t\t\t\tvar scaleValue = svg[i].getElementById(data.id).getAttribute(\"transform\").match(/scale.*?\\)/g)[0].match(/[^\\(]+(?=\\))/g)[0].split(',')\n\t\t\t\t\tshape.scale(parseInt(scaleValue[0]),parseInt(scaleValue[1]))\n\t\t\t\t}\n\t    \t}\n\n\t    \t// set attributes of shape\n\t    \tif(point){\n\t    \t\tvar cx = parseFloat(point.getAttribute(\"x\"))\n\t    \t\tvar cy = parseFloat(point.getAttribute(\"y\"))\n\t    \t\tshape.attr({\"name\":data.id,\"cx\":cx, \"cy\":cy, \"transform\":\"translate(\"+(parseFloat(transform[0])-cx)+\",\"+(parseFloat(transform[1])-cy)+\")\",\"width\":parseFloat(svg[i].getAttribute(\"width\").match(/\\d+/g)[0]),\"height\":parseFloat(svg[i].getAttribute(\"height\").match(/\\d+/g)[0])})\n\t    \t}else{\n\t\t\t\tshape.attr({\"name\":data.id,\"transform\":\"translate(\"+(parseFloat(transform[0])-parseFloat(svg[i].getAttribute(\"width\").match(/\\d+/g)[0])/2)+\",\"+(parseFloat(transform[1])-parseFloat(svg[i].getAttribute(\"height\").match(/\\d+/g)[0])/2)+\")\",\"width\":parseFloat(svg[i].getAttribute(\"width\").match(/\\d+/g)[0]),\"height\":parseFloat(svg[i].getAttribute(\"height\").match(/\\d+/g)[0])})\n\t    \t}\n\n\t    \t// set content of shape\n\t    \tif(svg[i].getElementsByTagName('path')[0]){\n\t    \t\tshape.path(svg[i].getElementsByTagName('path')[0].getAttribute(\"d\"))\n\t    \t}\n\t    \telse if(svg[i].getElementsByTagName('polygon')[0]){\n\t    \t\tshape.add(draw.polygon().attr(\"points\",svg[i].getElementsByTagName('polygon')[0].getAttribute(\"points\")))\n\t    \t}\n\n\n\t    \ttList[index] = shape.clone()\n\n\n\t\t}else if(svg[i].getElementById('square')){\n\t    \tdata=svg[i].getElementById('square').childNodes[1]\n\t    \tvar transform = svg[i].getElementById('square').getAttribute(\"transform\").match(/[^\\(]+(?=\\))/g)[0].split(',')\n\t    \tvar point = svg[i].getElementById('point')\n\t    \tvar index = (parseInt(data.id.split(\"/\")[1])+4) + (parseInt(data.id.split(\"/\")[2])+4)*9\n\n\n\t    \t//check if the element has transform data\n\t    \tif(svg[i].getElementById(data.id).getAttribute(\"transform\")){\n\t    \t\tvar elementTransform = svg[i].getElementById(data.id).getAttribute(\"transform\").match(/[^\\(]+(?=\\))/g)[0].split(',')\n\t    \t\tconsole.log(elementTransform)\n\t    \t\ttransform[0] = parseFloat(transform[0])+parseFloat(elementTransform[0])\n\t    \t\ttransform[1] = parseFloat(transform[1])+parseFloat(elementTransform[1])\n\n\t    \t\tif(svg[i].getElementById(data.id).getAttribute(\"transform\").indexOf(\"scale\")>0){\n\t\t\t\t\tvar scaleValue = svg[i].getElementById(data.id).getAttribute(\"transform\").match(/scale.*?\\)/g)[0].match(/[^\\(]+(?=\\))/g)[0].split(',')\n\t\t\t\t\tshape.scale(parseInt(scaleValue[0]),parseInt(scaleValue[1]))\n\t\t\t\t}\n\t    \t}\n\n\t    \t// set attributes of shape\n\t    \tif(point){\n\t    \t\tvar cx = parseFloat(point.getAttribute(\"x\"))\n\t    \t\tvar cy = parseFloat(point.getAttribute(\"y\"))\n\t    \t\tshape.attr({\"name\":data.id, \"cx\":cx, \"cy\":cy, \"transform\":\"translate(\"+(parseFloat(transform[0])-cx)+\",\"+(parseFloat(transform[1])-cy)+\")\",\"width\":parseFloat(svg[i].getAttribute(\"width\").match(/\\d+/g)[0]),\"height\":parseFloat(svg[i].getAttribute(\"height\").match(/\\d+/g)[0])})\n\t    \t}else{\n\t\t\t\tshape.attr({\"name\":data.id,\"transform\":\"translate(\"+(parseFloat(transform[0])-parseFloat(svg[i].getAttribute(\"width\").match(/\\d+/g)[0])/2)+\",\"+(parseFloat(transform[1])-parseFloat(svg[i].getAttribute(\"height\").match(/\\d+/g)[0])/2)+\")\",\"width\":parseFloat(svg[i].getAttribute(\"width\").match(/\\d+/g)[0]),\"height\":parseFloat(svg[i].getAttribute(\"height\").match(/\\d+/g)[0])})\n\t    \t}\n\n\t    \t// set content of shape\n\t    \tif(svg[i].getElementsByTagName('path')[0]){\n\t    \t\tshape.path(svg[i].getElementsByTagName('path')[0].getAttribute(\"d\"))\n\t    \t}\n\t    \telse if(svg[i].getElementsByTagName('polygon')[0]){\n\t    \t\tshape.add(draw.polygon().attr(\"points\",svg[i].getElementsByTagName('polygon')[0].getAttribute(\"points\")))\n\t    \t}\n\n\n\t    \trList[index] = shape.clone()\n\n\n\t\t}else if(svg[i].getElementById('circular')){\n\t    \tdata=svg[i].getElementById('circular').childNodes[1]\n\t    \tvar transform = svg[i].getElementById('circular').getAttribute(\"transform\").match(/[^\\(]+(?=\\))/g)[0].split(',')\n\t    \tvar point = svg[i].getElementById('point')\n\t    \tvar index = (parseInt(data.id.split(\"/\")[1])+4) + (parseInt(data.id.split(\"/\")[2])+4)*9\n\n\t    \t//check if the element has transform data\n\t    \tif(svg[i].getElementById(data.id).getAttribute(\"transform\")){\n\t    \t\tvar elementTransform = svg[i].getElementById(data.id).getAttribute(\"transform\").match(/[^\\(]+(?=\\))/g)[0].split(',')\n\t    \t\t// console.log(elementTransform)\n\t    \t\ttransform[0] = parseFloat(transform[0])+parseFloat(elementTransform[0])\n\t    \t\ttransform[1] = parseFloat(transform[1])+parseFloat(elementTransform[1])\n\n\t    \t\tif(svg[i].getElementById(data.id).getAttribute(\"transform\").indexOf(\"scale\")>0){\n\t\t\t\t\tvar scaleValue = svg[i].getElementById(data.id).getAttribute(\"transform\").match(/scale.*?\\)/g)[0].match(/[^\\(]+(?=\\))/g)[0].split(',')\n\t\t\t\t\tshape.scale(parseInt(scaleValue[0]),parseInt(scaleValue[1]))\n\t\t\t\t}\n\t    \t}\n\n\t\t\t// set attributes of shape\n\t    \tif(point){\n\t    \t\tvar cx = parseFloat(point.getAttribute(\"x\"))\n\t    \t\tvar cy = parseFloat(point.getAttribute(\"y\"))\n\t    \t\tshape.attr({\"name\":data.id, \"cx\":cx, \"cy\":cy, \"transform\":\"translate(\"+(parseFloat(transform[0])-cx)+\",\"+(parseFloat(transform[1])-cy)+\")\",\"width\":parseFloat(svg[i].getAttribute(\"width\").match(/\\d+/g)[0]),\"height\":parseFloat(svg[i].getAttribute(\"height\").match(/\\d+/g)[0])})\n\t    \t}else{\n\t\t\t\tshape.attr({\"name\":data.id,\"transform\":\"translate(\"+(parseFloat(transform[0])-parseFloat(svg[i].getAttribute(\"width\").match(/\\d+/g)[0])/2)+\",\"+(parseFloat(transform[1])-parseFloat(svg[i].getAttribute(\"height\").match(/\\d+/g)[0])/2)+\")\",\"width\":parseFloat(svg[i].getAttribute(\"width\").match(/\\d+/g)[0]),\"height\":parseFloat(svg[i].getAttribute(\"height\").match(/\\d+/g)[0])})\n\t    \t}\n\n\t\t\t// set content of shape\n\t    \tif(svg[i].getElementsByTagName('path')[0]){\n\t    \t\tshape.path(svg[i].getElementsByTagName('path')[0].getAttribute(\"d\"))\n\t    \t}\n\t    \telse if(svg[i].getElementsByTagName('ellipse')[0]){\n\t    \t\tshape.add(draw.ellipse().attr({\"cx\":svg[i].getElementsByTagName('ellipse')[0].getAttribute(\"cx\"),\"cy\":svg[i].getElementsByTagName('ellipse')[0].getAttribute(\"cy\"),\"rx\":svg[i].getElementsByTagName('ellipse')[0].getAttribute(\"rx\"),\"ry\":svg[i].getElementsByTagName('ellipse')[0].getAttribute(\"ry\")}))\n\t    \t}\n\t    \telse if(svg[i].getElementsByTagName('circle')[0]){\n\t    \t\tshape.add(draw.circle().attr({\"cx\":svg[i].getElementsByTagName('circle')[0].getAttribute(\"cx\"),\"cy\":svg[i].getElementsByTagName('circle')[0].getAttribute(\"cy\"),\"r\":svg[i].getElementsByTagName('circle')[0].getAttribute(\"r\")}))\n\t    \t}\n\n\t    \tcList[index] = shape.clone()\n\n\t\t}else if(svg[i].getElementById('people')){\n\t\t\tdata=svg[i].getElementById('people').childNodes[1]\n\t    \tvar transform = svg[i].getElementById('people').getAttribute(\"transform\").match(/[^\\(]+(?=\\))/g)[0].split(',')\n\t\t\tshape.attr({\"name\":data.id,\"transform\":\"translate(\"+(parseFloat(transform[0])+parseFloat(svg[i].getAttribute(\"width\").match(/\\d+/g)[0])/2)+\",\"+(parseFloat(transform[1])+parseFloat(svg[i].getAttribute(\"height\").match(/\\d+/g)[0])/2)+\")\",\"width\":parseFloat(svg[i].getAttribute(\"width\").match(/\\d+/g)[0]),\"height\":parseFloat(svg[i].getAttribute(\"height\").match(/\\d+/g)[0])})\n\n\t\t\tvar transformHead = svg[i].getElementById('head').getAttribute(\"transform\").match(/[^\\(]+(?=\\))/g)[0].split(',')\n\t\t\tvar head = draw.group().translate(parseFloat(transformHead[0]), parseFloat(transformHead[1])).addClass(\"head\")\n\n\t\t\tvar headPaths = svg[i].getElementById('head').getElementsByTagName(\"path\")\n\n\t\t\t// console.log(headPaths)\n\t\t\tfor(var index = 0; index < headPaths.length; index++){\n\t\t\t\tvar newPath = draw.path(headPaths[index].getAttribute(\"d\"))\n\t\t\t\tif(headPaths[index].getAttribute(\"id\")==\"nose\" || headPaths[index].getAttribute(\"id\")==\"ear\" || headPaths[index].getAttribute(\"id\")==\"ear2\")\n\t\t\t\t\tnewPath.addClass(\"nose\")\n\t\t\t\tif(headPaths[index].getAttribute(\"id\")==\"shadow\")\n\t\t\t\t\tnewPath.addClass(\"shadow\")\n\t\t\t\tif(headPaths[index].getAttribute(\"id\")==\"face\" || headPaths[index].getAttribute(\"id\")==\"neck\")\n\t\t\t\t\tnewPath.addClass(\"skin\")\n\n\t\t\t\tif(headPaths[index].getAttribute(\"fill\")){\n\t\t\t\t\tvar color = headPaths[index].getAttribute(\"fill\")\n\t\t\t\t\tnewPath.fill(color)\n\t\t\t\t}\n\n\t\t\t\tif(headPaths[index].getAttribute(\"transform\")){\n\n\t\t\t\t\tif(headPaths[index].getAttribute(\"transform\").indexOf(\"scale\")>0){\n\t\t\t\t\t\tvar scaleValue = headPaths[index].getAttribute(\"transform\").match(/scale.*?\\)/g)[0].match(/[^\\(]+(?=\\))/g)[0].split(',')\n\t\t\t\t\t\tnewPath.scale(parseInt(scaleValue[0]),parseInt(scaleValue[1]))\n\t\t\t\t\t}\n\n\t\t\t\t\tif(headPaths[index].getAttribute(\"transform\").indexOf(\"rotate\")>0){\n\t\t\t\t\t\tvar rotateValue = headPaths[index].getAttribute(\"transform\").match(/rotate.*?\\)/g)[0].match(/[^\\(]+(?=\\))/g)[0]\n\t\t\t\t\t\tnewPath.rotate(parseFloat(rotateValue))\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\thead.add(newPath)\n\t\t\t}\n\n\t\t\tvar headCircles = svg[i].getElementById('head').getElementsByTagName(\"ellipse\")\n\t\t\tfor(var index = 0; index < headCircles.length; index++){\n\t    \t\tvar newCircle = draw.ellipse().attr({\"cx\":headCircles[index].getAttribute(\"cx\"),\"cy\":headCircles[index].getAttribute(\"cy\"),\"rx\":headCircles[index].getAttribute(\"rx\"),\"ry\":headCircles[index].getAttribute(\"ry\")})\n\n\t    \t\tif(headCircles[index].getAttribute(\"fill\")){\n\t\t\t\t\tvar color = headCircles[index].getAttribute(\"fill\")\n\t\t\t\t\tnewCircle.fill(color)\n\t\t\t\t}\n\n\t    \t\tif(headCircles[index].getAttribute(\"transform\")){\n\n\t\t    \t\tif(headCircles[index].getAttribute(\"transform\").indexOf(\"scale\")>0){\n\t\t\t\t\t\tvar scaleValue = headCircles[index].getAttribute(\"transform\").match(/scale.*?\\)/g)[0].match(/[^\\(]+(?=\\))/g)[0].split(',')\n\t\t\t\t\t\tnewCircle.scale(parseInt(scaleValue[0]),parseInt(scaleValue[1]))\n\t\t\t\t\t}\n\t\t\t\t\tif(headCircles[index].getAttribute(\"transform\").indexOf(\"rotate\")>0){\n\t\t\t\t\t\tvar rotateValue = headCircles[index].getAttribute(\"transform\").match(/rotate.*?\\)/g)[0].match(/[^\\(]+(?=\\))/g)[0]\n\t\t\t\t\t\tnewCircle.rotate(parseFloat(rotateValue))\n\t\t\t\t\t}\n\n\t    \t\t}\n\n\t\t\t\thead.add(newCircle)\n\t\t\t}\n\n\n\t\t\tvar arm = svg[i].getElementById('arm')\n\t\t\tvar newArm = draw.path(arm.getAttribute(\"d\")).fill(arm.getAttribute(\"fill\")).addClass(\"skin\")\n\n\n\t\t\tvar clothes = svg[i].getElementById('clothes')\n\t\t\tvar newClothes = draw.path(clothes.getAttribute(\"d\")).addClass(\"clothes\")\n\n\n\t\t\tvar pattern = svg[i].getElementById('pattern').getElementsByTagName(\"path\")[0]\n\t\t\tvar newPattern = draw.path(pattern.getAttribute(\"d\")).addClass('logo')\n\n\t\t\tvar transform = svg[i].getElementById('pattern').getAttribute(\"transform\").match(/[^\\(]+(?=\\))/g)[0].split(',')\n\t\t\tvar color = svg[i].getElementById('pattern').getAttribute(\"fill\")\n\n\t\t\tnewPattern.attr({\"transform\":\"translate(\"+parseFloat(transform[0])+\",\"+parseFloat(transform[1])+\")\"})\n\t\t\tnewPattern.fill(color)\n\n\t\t\tshape.add(head)\n\t\t\tshape.add(newArm)\n\t\t\tshape.add(newClothes)\n\t\t\tshape.add(newPattern)\n\n\t\t\tpList.push(shape.clone())\n\n\t\t}\n\t}\n\n}\n\nvar drawList = []\n\n\nvar _draw = SVG('test').size(width, height)\nvar _circleList = [], _rectList = [], _triList = [], _peopleList = []\ncreateShapes(_circleList,_rectList,_triList,_peopleList,_draw)\n\n//Define the number of deatures for each shape\nconst NUM_SHAPE_FEATURES=15,\n\t  MAX_ELEMENTS = 18,\n\t  NUM_PEOPLE_FEATURES = 17,\n\t  NUM_TEXT_FEATURES =1,\n\t  NUM_BG_FEATURES = 6,\n\t  NUM_ELEMENT_TYPE = 3,\n\t  NUM_ELEMENT_X = 9,\n\t  NUM_ELEMENT_Y = 9;\n\n\nfunction rotate (shape,index,csvdata,i){\n\tvar randomRotation = index\n\tvar shapeName = shape.node.attributes.name.nodeValue.split(\"/\")\n\tvar rotationAngel\n\n\tif(shapeName[0]==\"t\"){\n    \tif(parseInt(shapeName[1])==-4){\n    \t\trotationAngel = tRotation_1[parseInt(tRotation_1.length*randomRotation)]\n    \t\tcsvdata[i].data[6] = parseInt(tRotation_1.length*randomRotation)/tRotation_1.length\n    \t}else if(parseInt(shapeName[1])==-3){\n    \t\trotationAngel = tRotation_2[parseInt(tRotation_2.length*randomRotation)]\n    \t\tcsvdata[i].data[6] = parseInt(tRotation_2.length*randomRotation)/tRotation_2.length\n    \t}else if(parseInt(shapeName[1])==-2||parseInt(shapeName[1])==-1||parseInt(shapeName[1])==0){\n    \t\trotationAngel = tRotation_3[parseInt(tRotation_3.length*randomRotation)]\n    \t\tcsvdata[i].data[6] = parseInt(tRotation_3.length*randomRotation)/tRotation_3.length\n    \t}else if(parseInt(shapeName[1])==1){\n    \t\trotationAngel = tRotation_4[parseInt(tRotation_4.length*randomRotation)]\n    \t\tcsvdata[i].data[6] = parseInt(tRotation_4.length*randomRotation)/tRotation_4.length\n    \t}else if(parseInt(shapeName[1])==2){\n    \t\trotationAngel = tRotation_5[parseInt(tRotation_5.length*randomRotation)]\n    \t\tcsvdata[i].data[6] = parseInt(tRotation_5.length*randomRotation)/tRotation_5.length\n    \t}else if(parseInt(shapeName[1])==3){\n    \t\trotationAngel = tRotation_6[parseInt(tRotation_6.length*randomRotation)]\n    \t\tcsvdata[i].data[6] = parseInt(tRotation_6.length*randomRotation)/tRotation_6.length\n    \t}else if(parseInt(shapeName[1])==4){\n    \t\trotationAngel = tRotation_7[parseInt(tRotation_7.length*randomRotation)]\n    \t\tcsvdata[i].data[6] = parseInt(tRotation_7.length*randomRotation)/tRotation_7.length\n    \t}\n\n\t}\n\t//\n\telse if(shapeName[0]==\"s\"){\n    \tif(parseInt(shapeName[1])>=-4 && parseInt(shapeName[1])<=-1){\n    \t\trotationAngel = sRotation_1[parseInt(sRotation_1.length*randomRotation)]\n    \t\tcsvdata[i].data[6] = parseInt(sRotation_1.length*randomRotation)/sRotation_1.length\n    \t}else if(parseInt(shapeName[1])>=0 && parseInt(shapeName[1])<=4){\n    \t\trotationAngel = sRotation_2[parseInt(sRotation_2.length*randomRotation)]\n    \t\tcsvdata[i].data[6] = parseInt(sRotation_2.length*randomRotation)/sRotation_2.length\n    \t}\n\t}\n\telse if(shapeName[0]==\"c\"){\n\t\trotationAngel = cRotation[parseInt(cRotation.length*randomRotation)]\n\t\tcsvdata[i].data[6] = parseInt(cRotation.length*randomRotation)/cRotation.length\n\t}\n\n\tif(shape.attr(\"cx\") && shape.attr(\"cy\")){\n\t\tshape\n\t\t.rotate(rotationAngel, shape.attr(\"cx\"), shape.attr(\"cy\"))\n\t}else{\n\t\tshape\n\t\t.rotate(rotationAngel)\n\t}\n\n\tcsvdata[i].data[6] = csvdata[i].data[6].toString()\n\n\treturn randomRotation;\n}\n\nvar div = document.createElement(\"div\");\ndiv.setAttribute(\"id\", \"container\");\n\nfunction createPosters(csvdata, num){\n\n\tvar subdiv = document.createElement(\"div\");\n\tsubdiv.setAttribute(\"id\", \"poster\"+num);\n\tsubdiv.setAttribute(\"class\", \"poster\");\n\tdiv.appendChild(subdiv)\n\tdocument.body.appendChild(div);\n\n\tvar draw = SVG('poster'+num).size(width, height)\n\tvar circleList = _circleList.concat(), rectList = _rectList.concat(), triList = _triList.concat(), peopleList = _peopleList.concat()\n\n\tvar shapeList = triList.concat(rectList,circleList)\n\n\tvar bgGradient = draw.gradient('linear', function(stop) {\n\t\tvar bgHSV = csvdata[csvdata.length-1]\n\t\tstop.at(0, createRGBfromHSV(bgHSV.data[0],bgHSV.data[1],bgHSV.data[2]))\n\t\tstop.at(1, createRGBfromHSV(bgHSV.data[3],bgHSV.data[4],bgHSV.data[5]))\n\t})\n\tbgGradient.from(\"0%\", \"0%\").to(\"0%\", \"100%\")\n\tdraw.rect(width, height).fill(bgGradient)\n\n\tfor(var i=0; i <csvdata.length; i++){\n\t\tif(csvdata[i].name == \"element\"){\n\t\t\tvar shapeNormalX = Math.round((NUM_ELEMENT_TYPE-1)*csvdata[i].data[0]),\n\t\t\t\tshapeNormalY = Math.round((NUM_ELEMENT_X-1)*csvdata[i].data[1]),\n\t\t\t\tshapeNormalZ = Math.round((NUM_ELEMENT_Y-1)*csvdata[i].data[2]);\n\n\t\t\tvar elementColor = draw.gradient('linear', function(stop) {\n\t\t\t\tstop.at(0, createRGBfromHSV(csvdata[i].data[7],csvdata[i].data[8],csvdata[i].data[9]))\n\t\t\t\tstop.at(1, createRGBfromHSV(csvdata[i].data[10],csvdata[i].data[11],csvdata[i].data[12]))\n\t\t\t})\n\t\t\telementColor.from(\"0%\", \"0%\").to(\"0%\", \"100%\")\n\n\t\t\t// console.log(shapeList)\n\t\t\t//console.log(shapeNormalX,shapeNormalY,shapeNormalZ,shapeNormalX*NUM_ELEMENT_X*NUM_ELEMENT_Y+NUM_ELEMENT_X*shapeNormalY+shapeNormalZ)\n\n\t\t\tvar shapeNormal = shapeList[shapeNormalX*NUM_ELEMENT_X*NUM_ELEMENT_Y+NUM_ELEMENT_X*shapeNormalY+shapeNormalZ].clone()\n\n\t\t\tvar shapeScale =Math.sqrt((width*height)*csvdata[i].data[3]/(shapeNormal.width()*shapeNormal.height()))\n\n\t\t\t//draw.use(shapeNormal)\n\n\t\t\t// console.log(width*csvdata[i].data[4],height*csvdata[i].data[5],shapeScale,parseFloat(csvdata[i].data[13]))\n\n\t\t\tshapeNormal\n\t\t\t.dx(width*csvdata[i].data[4])\n\t\t\t.dy(height*csvdata[i].data[5])\n\n\t\t\trotate(shapeNormal,csvdata[i].data[6],csvdata,i)\n\n\t\t\tshapeNormal\n\t\t\t.scale(shapeScale,shapeScale)\n\t\t\t.fill(elementColor)\n\t\t\t.opacity(parseFloat(csvdata[i].data[13]))\n\t\t}\n\t}\n\n\tdrawList.push(draw)\n}\n\n\nconsole.log(drawList)\n\nvar backedOpacity\n\nvar compare = function(prop){\n\treturn function(a,b){\n\t\tvar val1 = a[prop];\n\t\tvar val2 = b[prop];\n\t\treturn val1-val2;\n\t}\n}\n\n\nvar posterStart = 0, posterEnd=601, posterGap=1;\n\n\n$(\"#setting-confirm\").click(function(){\n\tposterStart = parseInt($(\"#poster-start\").val())\n\tposterEnd = parseInt($(\"#poster-end\").val())\n\tposterGap = parseInt($(\"#poster-gap\").val())\n\t$(\"#container\").empty()\n\tdrawList = []\n\tsetPoster(posterStart, posterEnd, posterGap)\n})\n\n\nvar dataPath = \"js/record_new.csv\"\n\nsetPoster(posterStart, posterEnd, posterGap)\n\nvar newcsv = []\n\nfunction setPoster(data){\n\t\tvar features = csv2array(data)\n\n\t\tconsole.log(features)\n\n\t\tfor (var i = 1; i < features.length; i++){\n\n\t\t\tvar element = {\"data\":features[i].slice(0,15),\"index\":features[i][14],\"name\":\"element\"},\n\t\t\t\telement2 = {\"data\":features[i].slice(15,30),\"index\":features[i][29],\"name\":\"element\"},\n\t\t\t\telement3 = {\"data\":features[i].slice(30,45),\"index\":features[i][44],\"name\":\"element\"},\n\t\t\t\telement4 = {\"data\":features[i].slice(45,60),\"index\":features[i][59],\"name\":\"element\"},\n\t\t\t\telement5 = {\"data\":features[i].slice(60,75),\"index\":features[i][74],\"name\":\"element\"},\n\t\t\t\telement6 = {\"data\":features[i].slice(75,90),\"index\":features[i][89],\"name\":\"element\"},\n\t\t\t\telement7 = {\"data\":features[i].slice(90,105),\"index\":features[i][104],\"name\":\"element\"},\n\t\t\t\telement8 = {\"data\":features[i].slice(105,120),\"index\":features[i][119],\"name\":\"element\"},\n\t\t\t\telement9 = {\"data\":features[i].slice(120,135),\"index\":features[i][134],\"name\":\"element\"},\n\t\t\t\telement10 = {\"data\":features[i].slice(135,150),\"index\":features[i][149],\"name\":\"element\"},\n\t\t\t\telement11 = {\"data\":features[i].slice(150,165),\"index\":features[i][164],\"name\":\"element\"},\n\t\t\t\telement12 = {\"data\":features[i].slice(165,180),\"index\":features[i][179],\"name\":\"element\"},\n\t\t\t\telement13 = {\"data\":features[i].slice(180,195),\"index\":features[i][194],\"name\":\"element\"},\n\t\t\t\telement14 = {\"data\":features[i].slice(195,210),\"index\":features[i][209],\"name\":\"element\"},\n\t\t\t\telement15 = {\"data\":features[i].slice(210,225),\"index\":features[i][224],\"name\":\"element\"},\n\t\t\t\telement16 = {\"data\":features[i].slice(225,240),\"index\":features[i][239],\"name\":\"element\"},\n\t\t\t\telement17 = {\"data\":features[i].slice(240,255),\"index\":features[i][254],\"name\":\"element\"},\n\t\t\t\telement18 = {\"data\":features[i].slice(255,270),\"index\":features[i][269],\"name\":\"element\"},\n\t\t\t\tbg = {\"data\":features[i].slice(270,276),\"name\":\"bg\"};\n\n\t\t\tvar poster = [element,element2,element3,element4,element5,element6,element7,element8,element9,element10,element11,\n\t\t\telement12,element13,element14,element15,element16,element17,element18,bg]\n\n\t\t\tcreatePosters(poster,i)\n\n\t\t\tvar newcsvItem =[]\n\n\t\t\tfor (var index in poster) {\n\t\t\t\tfor(var j in poster[index].data){\n\t\t\t\t\tnewcsvItem.push(poster[index].data[j])\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnewcsv.push(newcsvItem)\n\n\t\t}\n\n\t\tconsole.log(newcsv)\n\n\t\tvar goodParameters = {}\n\t\tgoodParameters.data = newcsv\n\n\t\t$.ajax({\n\t\t\t type: \"POST\",\n\t\t\t url: \"/saveRecord\",\n\t\t\t data: {\n\t\t\t \t\"data\":JSON.stringify(goodParameters)\n\t\t\t },\n\t\t\t dataType: \"application/json\",\n\n\t\t\t success: function(data, err){\n\t\t\t \tif(err)\n\t\t\t \t\tconsole.log(err)\n\t\t\t }\n\t\t});\n\n\n\t\t//for inspecting the elements behind the big shapes.\n\t\t$(\".poster svg\").on(\"mouseenter\",function(){\n\t\t\tbackedOpacity = []\n\t\t\tvar selectedID = $(this).parent().attr(\"id\").replace(/[^0-9]/ig,\"\");\n\t\t\tvar selectedDraw =  drawList[selectedID]\n\n\t\t\tvar childNodes = selectedDraw.children()\n\t\t\tfor(var index in childNodes){\n\t\t\t\tbackedOpacity.push(childNodes[index].opacity())\n\t\t\t\tchildNodes[index].opacity(0.3)\n\t\t\t}\n\t\t})\n\n\t\t$(\".poster svg\").on(\"mouseleave\",function(){\n\t\t\tvar selectedID = $(this).parent().attr(\"id\").replace(/[^0-9]/ig,\"\");\n\t\t\tvar selectedDraw =  drawList[selectedID]\n\n\t\t\tvar childNodes = selectedDraw.children()\n\n\t\t\tfor(var index in childNodes){\n\t\t\t\tif(backedOpacity[index])\n\t\t\t\t\tchildNodes[index].opacity(backedOpacity[index])\n\t\t\t\telse{\n\t\t\t\t\tchildNodes[index].opacity(1)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\t$(\".poster\").click(function(){\n\t\t\tvar id = $(this).attr(\"id\")\n\t\t\tsaveSvgAsPng($(\"#\"+id+\" svg\")[0], id+\".png\")\n\t\t})\n}\n\nexport {\n    _circleList,\n    _rectList,\n    _triList,\n    _peopleList,\n    height,\n    width\n};\n\n\nexport {\n    createPosters,\n    createShapes,\n    setPoster\n};"]},"metadata":{},"sourceType":"module"}